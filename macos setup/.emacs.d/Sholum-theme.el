(deftheme Sholum
  "Created 2020-10-21.")

(custom-theme-set-variables
 'Sholum
 '(ansi-color-names-vector ["#14141e" "#e84c58" "#35BF88" "#dbac66" "#4ca6e8" "#c79af4" "#6bd9db" "#e6e6e8"])
 '(pos-tip-background-color "#1d1d2b")
 '(pos-tip-foreground-color "#d4d4d6"))

(custom-theme-set-faces
 'Sholum
 '(cursor ((t (:background "RoyalBlue2"))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((((type w32)) (:foundry "outline" :family "Arial")) (t (:family "Sans Serif"))))
 '(escape-glyph ((((class color) (min-colors 16777215)) (:background nil :foreground "#6bd9db")) (((class color) (min-colors 255)) (:background nil :foreground "#6bd9db")) (t (:background nil :foreground "#6bd9db"))))
 '(homoglyph ((((background dark)) (:foreground "cyan")) (((type pc)) (:foreground "magenta")) (t (:foreground "brown"))))
 '(minibuffer-prompt ((((class color) (min-colors 16777215)) (:background nil :foreground "#738FD7" :bold t)) (((class color) (min-colors 255)) (:background nil :foreground "#738FD7" :bold t)) (t (:background nil :foreground "#738FD7" :bold t))))
 '(highlight ((t (:background "#1e1e2b" :foreground "SteelBlue3"))))
 '(region ((((class color) (min-colors 16777215)) (:background "#2E403B" :foreground "#bebec4")) (((class color) (min-colors 255)) (:background "#2E403B" :foreground "#bebec4")) (t (:background "#2E403B" :foreground "#bebec4"))))
 '(shadow ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(secondary-selection ((((class color) (min-colors 16777215)) (:background "#545c5e" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#545c5e" :foreground "#e6e6e8")) (t (:background "#545c5e" :foreground "#e6e6e8"))))
 '(trailing-whitespace ((((class color) (min-colors 16777215)) (:background "#e84c58")) (((class color) (min-colors 255)) (:background "#e84c58")) (t (:background "#e84c58"))))
 '(font-lock-builtin-face ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(font-lock-comment-delimiter-face ((((class color) (min-colors 16777215)) (:italic nil :foreground "LightSeaGreen" :background nil)) (((class color) (min-colors 255)) (:italic nil :foreground "LightSeaGreen" :background nil)) (t (:italic nil :foreground "LightSeaGreen" :background nil))))
 '(font-lock-comment-face ((((class color) (min-colors 16777215)) (:italic nil :foreground "LightSeaGreen" :background nil)) (((class color) (min-colors 255)) (:italic nil :foreground "LightSeaGreen" :background nil)) (t (:italic nil :foreground "LightSeaGreen" :background nil))))
 '(font-lock-constant-face ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(font-lock-doc-face ((((class color) (min-colors 16777215)) (:foreground "#5D8272")) (((class color) (min-colors 255)) (:foreground "#5D8272")) (t (:foreground "#5D8272"))))
 '(font-lock-function-name-face ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(font-lock-keyword-face ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(font-lock-negation-char-face ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(font-lock-preprocessor-face ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 '(font-lock-string-face ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(font-lock-type-face ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(font-lock-variable-name-face ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(font-lock-warning-face ((((class color) (min-colors 16777215)) (:background nil :foreground "#dbac66")) (((class color) (min-colors 255)) (:background nil :foreground "#dbac66")) (t (:background nil :foreground "#dbac66"))))
 '(button ((((class color) (min-colors 16777215)) (:inherit link)) (((class color) (min-colors 255)) (:inherit link)) (t (:inherit link))))
 '(link ((((class color) (min-colors 16777215)) (:foreground "#9587DD" :underline t)) (((class color) (min-colors 255)) (:foreground "#9587DD" :underline t)) (t (:foreground "#9587DD" :underline t))))
 '(link-visited ((((class color) (min-colors 16777215)) (:inherit link :underline nil)) (((class color) (min-colors 255)) (:inherit link :underline nil)) (t (:inherit link :underline nil))))
 '(fringe ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#e6e6e8")) (t (:background "#222225" :foreground "#e6e6e8"))))
 '(header-line ((((class color) (min-colors 16777215)) (:background nil :foreground "#eed891")) (((class color) (min-colors 255)) (:background nil :foreground "#eed891")) (t (:background nil :foreground "#eed891"))))
 '(tooltip ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#d4d4d6")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#d4d4d6")) (t (:background "#2B2B2F" :foreground "#d4d4d6"))))
 '(mode-line ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#bebec4" :bold nil :box (:line-width 2 :color "#28283a"))) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#bebec4" :bold nil :box (:line-width 2 :color "#303035"))) (t (:background "#2B2B2F" :foreground "#bebec4" :bold nil :box (:line-width 2 :color "#303035")))))
 '(mode-line-buffer-id ((((class color) (min-colors 16777215)) (:background nil :foreground "#4ca6e8" :bold nil)) (((class color) (min-colors 255)) (:background nil :foreground "#4ca6e8" :bold nil)) (t (:background nil :foreground "#4ca6e8" :bold nil))))
 '(mode-line-emphasis ((((class color) (min-colors 16777215)) (:foreground "#0ed49b")) (((class color) (min-colors 255)) (:foreground "#0ed49b")) (t (:foreground "#0ed49b"))))
 '(mode-line-highlight ((((class color) (min-colors 16777215)) (:foreground "#0ed49b" :box nil :bold nil)) (((class color) (min-colors 255)) (:foreground "#0ed49b" :box nil :bold nil)) (t (:foreground "#0ed49b" :box nil :bold nil))))
 '(mode-line-inactive ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#545c5e" :bold nil :box (:line-width 2 :color "#28283a"))) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#545c5e" :bold nil :box (:line-width 2 :color "#303035"))) (t (:background "#2B2B2F" :foreground "#545c5e" :bold nil :box (:line-width 2 :color "#303035")))))
 '(isearch ((((class color) (min-colors 16777215)) (:background nil :foreground "#0ed49b" :bold t :underline t)) (((class color) (min-colors 255)) (:background nil :foreground "#0ed49b" :bold t :underline t)) (t (:background nil :foreground "#0ed49b" :bold t :underline t))))
 '(isearch-fail ((((class color) (min-colors 16777215)) (:background nil :foreground "#e84c58")) (((class color) (min-colors 255)) (:background nil :foreground "#e84c58")) (t (:background nil :foreground "#e84c58"))))
 '(lazy-highlight ((((class color) (min-colors 16777215)) (:background "#32324a" :foreground "#0ed49b")) (((class color) (min-colors 255)) (:background "#353b3c" :foreground "#0ed49b")) (t (:background "#353b3c" :foreground "#0ed49b"))))
 '(match ((((class color) (min-colors 16777215)) (:background nil :foreground "#0ed49b")) (((class color) (min-colors 255)) (:background nil :foreground "#0ed49b")) (t (:background nil :foreground "#0ed49b"))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))
 '(font-lock-reference-face ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(kaolin-themes-boolean ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(warning ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(error ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(file-name-shadow ((((class color) (min-colors 16777215)) (:inherit shadow)) (((class color) (min-colors 255)) (:inherit shadow)) (t (:inherit shadow))))
 '(vertical-border ((((class color) (min-colors 16777215)) (:foreground "#28283a")) (((class color) (min-colors 255)) (:foreground "#303035")) (t (:foreground "#303035"))))
 '(window-divider ((((class color) (min-colors 16777215)) (:foreground "#28283a")) (((class color) (min-colors 255)) (:foreground "#303035")) (t (:foreground "#303035"))))
 '(bold ((((class color) (min-colors 16777215)) (:bold t)) (((class color) (min-colors 255)) (:bold t)) (t (:bold t))))
 '(italic ((((class color) (min-colors 16777215)) (:italic t)) (((class color) (min-colors 255)) (:italic t)) (t (:italic t))))
 '(default-italic ((((class color) (min-colors 16777215)) (:italic t)) (((class color) (min-colors 255)) (:italic t)) (t (:italic t))))
 '(bold-italic ((((class color) (min-colors 16777215)) (:bold t :italic t)) (((class color) (min-colors 255)) (:bold t :italic t)) (t (:bold t :italic t))))
 '(success ((((class color) (min-colors 16777215)) (:background nil :foreground "#65E6A7")) (((class color) (min-colors 255)) (:background nil :foreground "#65E6A7")) (t (:background nil :foreground "#65E6A7"))))
 '(menu ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#d4d4d6")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#d4d4d6")) (t (:background "#2B2B2F" :foreground "#d4d4d6"))))
 '(tool-bar ((((class color) (min-colors 16777215)) (:inherit header-line)) (((class color) (min-colors 255)) (:inherit header-line)) (t (:inherit header-line))))
 '(package-name ((((class color) (min-colors 16777215)) (:inherit link :underline nil)) (((class color) (min-colors 255)) (:inherit link :underline nil)) (t (:inherit link :underline nil))))
 '(custom-button ((((class color) (min-colors 16777215)) (:background "#5D8272" :foreground "#e6e6e8" :box (:line-width 2 :color "#5D8272") :height 0.9)) (((class color) (min-colors 255)) (:background "#5D8272" :foreground "#e6e6e8" :box (:line-width 2 :color "#5D8272") :height 0.9)) (t (:background "#5D8272" :foreground "#e6e6e8" :box (:line-width 2 :color "#5D8272") :height 0.9))))
 '(custom-button-mouse ((((class color) (min-colors 16777215)) (:inherit custom-button :foreground "#eed891" :box (:line-width 2 :color "#eed891"))) (((class color) (min-colors 255)) (:inherit custom-button :foreground "#eed891" :box (:line-width 2 :color "#eed891"))) (t (:inherit custom-button :foreground "#eed891" :box (:line-width 2 :color "#eed891")))))
 '(custom-button-pressed ((((class color) (min-colors 16777215)) (:inherit custom-button :foreground "#eed891" :box (:line-width 2 :color "#545c5e"))) (((class color) (min-colors 255)) (:inherit custom-button :foreground "#eed891" :box (:line-width 2 :color "#545c5e"))) (t (:inherit custom-button :foreground "#eed891" :box (:line-width 2 :color "#545c5e")))))
 '(custom-button-unraised ((((class color) (min-colors 16777215)) (:inherit custom-button)) (((class color) (min-colors 255)) (:inherit custom-button)) (t (:inherit custom-button))))
 '(custom-button-pressed-unraised ((((class color) (min-colors 16777215)) (:inherit custom-button-pressed)) (((class color) (min-colors 255)) (:inherit custom-button-pressed)) (t (:inherit custom-button-pressed))))
 '(custom-group-tag ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :height 1.2 :weight bold)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :height 1.2 :weight bold)) (t (:foreground "#4ca6e8" :height 1.2 :weight bold))))
 '(custom-group-subtitle ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :height 1.0 :weight bold)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :height 1.0 :weight bold)) (t (:foreground "#4ca6e8" :height 1.0 :weight bold))))
 '(custom-variable-button ((((class color) (min-colors 16777215)) (:inherit button)) (((class color) (min-colors 255)) (:inherit button)) (t (:inherit button))))
 '(custom-comment ((((class color) (min-colors 16777215)) (:background "#545c5e" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#545c5e" :foreground "#e6e6e8")) (t (:background "#545c5e" :foreground "#e6e6e8"))))
 '(custom-comment-tag ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(custom-documentation ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(custom-visibility ((((class color) (min-colors 16777215)) (:background nil :foreground "#57bfc2" :height 0.9 :underline t)) (((class color) (min-colors 255)) (:background nil :foreground "#57bfc2" :height 0.9 :underline t)) (t (:background nil :foreground "#57bfc2" :height 0.9 :underline t))))
 '(custom-state ((((class color) (min-colors 16777215)) (:background nil :foreground "#7CF083")) (((class color) (min-colors 255)) (:background nil :foreground "#7CF083")) (t (:background nil :foreground "#7CF083"))))
 '(custom-changed ((((class color) (min-colors 16777215)) (:background nil :foreground "#dbac66")) (((class color) (min-colors 255)) (:background nil :foreground "#dbac66")) (t (:background nil :foreground "#dbac66"))))
 '(custom-set ((((class color) (min-colors 16777215)) (:background nil :foreground "#65E6A7")) (((class color) (min-colors 255)) (:background nil :foreground "#65E6A7")) (t (:background nil :foreground "#65E6A7"))))
 '(custom-themed ((((class color) (min-colors 16777215)) (:background nil :foreground "#65E6A7")) (((class color) (min-colors 255)) (:background nil :foreground "#65E6A7")) (t (:background nil :foreground "#65E6A7"))))
 '(custom-invalid ((((class color) (min-colors 16777215)) (:background nil :foreground "#e84c58")) (((class color) (min-colors 255)) (:background nil :foreground "#e84c58")) (t (:background nil :foreground "#e84c58"))))
 '(custom-variable-tag ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(custom-variable-obsolete ((((class color) (min-colors 16777215)) (:inherit shadow)) (((class color) (min-colors 255)) (:inherit shadow)) (t (:inherit shadow))))
 '(widget-documentation ((((class color) (min-colors 16777215)) (:background nil :foreground "#c79af4")) (((class color) (min-colors 255)) (:background nil :foreground "#c79af4")) (t (:background nil :foreground "#c79af4"))))
 '(widget-button-pressed ((((class color) (min-colors 16777215)) (:background nil :foreground "#4ca6e8")) (((class color) (min-colors 255)) (:background nil :foreground "#4ca6e8")) (t (:background nil :foreground "#4ca6e8"))))
 '(widget-field ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#d4d4d6" :box (:line-width 2 :color "#32324a" :style nil))) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#d4d4d6" :box (:line-width 2 :color "#353b3c" :style nil))) (t (:background "#2B2B2F" :foreground "#d4d4d6" :box (:line-width 2 :color "#353b3c" :style nil)))))
 '(widget-single-line-field ((((class color) (min-colors 16777215)) (:inherit widget-field)) (((class color) (min-colors 255)) (:inherit widget-field)) (t (:inherit widget-field))))
 '(dashboard-heading ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(dashboard-navigator ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(dashboard-footer ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(compilation-column-number ((((class color) (min-colors 16777215)) (:foreground "#d4d4d6")) (((class color) (min-colors 255)) (:foreground "#d4d4d6")) (t (:foreground "#d4d4d6"))))
 '(compilation-line-number ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(compilation-info ((((class color) (min-colors 16777215)) (:inherit success)) (((class color) (min-colors 255)) (:inherit success)) (t (:inherit success))))
 '(compilation-warning ((((class color) (min-colors 16777215)) (:inherit warning)) (((class color) (min-colors 255)) (:inherit warning)) (t (:inherit warning))))
 '(compilation-error ((((class color) (min-colors 16777215)) (:inherit error :weight bold)) (((class color) (min-colors 255)) (:inherit error :weight bold)) (t (:inherit error :weight bold))))
 '(compilation-mode-line-exit ((((class color) (min-colors 16777215)) (:inherit compilation-info)) (((class color) (min-colors 255)) (:inherit compilation-info)) (t (:inherit compilation-info))))
 '(compilation-mode-line-fail ((((class color) (min-colors 16777215)) (:inherit compilation-error)) (((class color) (min-colors 255)) (:inherit compilation-error)) (t (:inherit compilation-error))))
 '(dired-header ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :weight bold)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :weight bold)) (t (:foreground "#4ca6e8" :weight bold))))
 '(dired-directory ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(dired-ignored ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(dired-flagged ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(dired-mark ((((class color) (min-colors 16777215)) (:foreground "#eed891" :weight bold)) (((class color) (min-colors 255)) (:foreground "#eed891" :weight bold)) (t (:foreground "#eed891" :weight bold))))
 '(dired-marked ((((class color) (min-colors 16777215)) (:foreground "#0ed49b" :weight bold)) (((class color) (min-colors 255)) (:foreground "#0ed49b" :weight bold)) (t (:foreground "#0ed49b" :weight bold))))
 '(dired-perm-write ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8" :underline t)) (((class color) (min-colors 255)) (:foreground "#e6e6e8" :underline t)) (t (:foreground "#e6e6e8" :underline t))))
 '(dired-symlink ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(dired-warning ((((class color) (min-colors 16777215)) (:inherit font-lock-warning-face)) (((class color) (min-colors 255)) (:inherit font-lock-warning-face)) (t (:inherit font-lock-warning-face))))
 '(diredp-dir-name ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :weight bold :strike-through nil)) (((class color) (min-colors 255)) (:foreground "#738FD7" :weight bold :strike-through nil)) (t (:foreground "#738FD7" :weight bold :strike-through nil))))
 '(diredp-dir-heading ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :weight bold :strike-through nil)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :weight bold :strike-through nil)) (t (:foreground "#4ca6e8" :weight bold :strike-through nil))))
 '(diredp-file-name ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8" :strike-through nil)) (((class color) (min-colors 255)) (:foreground "#e6e6e8" :strike-through nil)) (t (:foreground "#e6e6e8" :strike-through nil))))
 '(diredp-file-suffix ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(diredp-ignored-file-name ((((class color) (min-colors 16777215)) (:inherit shadow)) (((class color) (min-colors 255)) (:inherit shadow)) (t (:inherit shadow))))
 '(diredp-omit-file-name ((((class color) (min-colors 16777215)) (:inherit shadow)) (((class color) (min-colors 255)) (:inherit shadow)) (t (:inherit shadow))))
 '(diredp-compressed-file-suffix ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(diredp-symlink ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(diredp-read-priv ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(diredp-write-priv ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(diredp-exec-priv ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(diredp-executable-tag ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(diredp-rare-priv ((((class color) (min-colors 16777215)) (:foreground "#e84c58" :weight bold)) (((class color) (min-colors 255)) (:foreground "#e84c58" :weight bold)) (t (:foreground "#e84c58" :weight bold))))
 '(diredp-dir-priv ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :weight bold)) (((class color) (min-colors 255)) (:foreground "#738FD7" :weight bold)) (t (:foreground "#738FD7" :weight bold))))
 '(diredp-other-priv ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(diredp-no-priv ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(diredp-number ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(diredp-date-time ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(diredp-flag-mark ((((class color) (min-colors 16777215)) (:background "#545c5e" :foreground "#dbac66")) (((class color) (min-colors 255)) (:background "#545c5e" :foreground "#dbac66")) (t (:background "#545c5e" :foreground "#dbac66"))))
 '(diredp-flag-mark-line ((((class color) (min-colors 16777215)) (:background "#545c5e")) (((class color) (min-colors 255)) (:background "#545c5e")) (t (:background "#545c5e"))))
 '(diredp-deletion ((((class color) (min-colors 16777215)) (:background nil :foreground "#e84c58" :underline t)) (((class color) (min-colors 255)) (:background nil :foreground "#e84c58" :underline t)) (t (:background nil :foreground "#e84c58" :underline t))))
 '(diredp-deletion-file-name ((((class color) (min-colors 16777215)) (:background nil :foreground "#e84c58" :underline t)) (((class color) (min-colors 255)) (:background nil :foreground "#e84c58" :underline t)) (t (:background nil :foreground "#e84c58" :underline t))))
 '(diredp-autofile-name ((((class color) (min-colors 16777215)) (:foreground "#eed891" :underline t)) (((class color) (min-colors 255)) (:foreground "#eed891" :underline t)) (t (:foreground "#eed891" :underline t))))
 '(diredfl-autofile-name ((((class color) (min-colors 16777215)) (:foreground "#eed891" :underline t)) (((class color) (min-colors 255)) (:foreground "#eed891" :underline t)) (t (:foreground "#eed891" :underline t))))
 '(diredfl-compressed-file-name ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(diredfl-compressed-file-suffix ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(diredfl-date-time ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(diredfl-deletion ((((class color) (min-colors 16777215)) (:background nil :foreground "#e84c58" :underline t)) (((class color) (min-colors 255)) (:background nil :foreground "#e84c58" :underline t)) (t (:background nil :foreground "#e84c58" :underline t))))
 '(diredfl-deletion-file-name ((((class color) (min-colors 16777215)) (:background nil :foreground "#e84c58" :underline t)) (((class color) (min-colors 255)) (:background nil :foreground "#e84c58" :underline t)) (t (:background nil :foreground "#e84c58" :underline t))))
 '(diredfl-dir-heading ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :weight bold :strike-through nil)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :weight bold :strike-through nil)) (t (:foreground "#4ca6e8" :weight bold :strike-through nil))))
 '(diredfl-dir-name ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :weight bold :strike-through nil)) (((class color) (min-colors 255)) (:foreground "#738FD7" :weight bold :strike-through nil)) (t (:foreground "#738FD7" :weight bold :strike-through nil))))
 '(diredfl-dir-priv ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :weight bold)) (((class color) (min-colors 255)) (:foreground "#738FD7" :weight bold)) (t (:foreground "#738FD7" :weight bold))))
 '(diredfl-exec-priv ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(diredfl-executable-tag ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(diredfl-file-name ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8" :strike-through nil)) (((class color) (min-colors 255)) (:foreground "#e6e6e8" :strike-through nil)) (t (:foreground "#e6e6e8" :strike-through nil))))
 '(diredfl-file-suffix ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(diredfl-flag-mark ((((class color) (min-colors 16777215)) (:background "#2E403B" :foreground "#dbac66")) (((class color) (min-colors 255)) (:background "#2E403B" :foreground "#dbac66")) (t (:background "#2E403B" :foreground "#dbac66"))))
 '(diredfl-flag-mark-line ((((class color) (min-colors 16777215)) (:background "#2E403B")) (((class color) (min-colors 255)) (:background "#2E403B")) (t (:background "#2E403B"))))
 '(diredfl-ignored-file-name ((((class color) (min-colors 16777215)) (:inherit shadow)) (((class color) (min-colors 255)) (:inherit shadow)) (t (:inherit shadow))))
 '(diredfl-link-priv ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(diredfl-no-priv ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(diredfl-number ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(diredfl-other-priv ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(diredfl-rare-priv ((((class color) (min-colors 16777215)) (:foreground "#e84c58" :weight bold)) (((class color) (min-colors 255)) (:foreground "#e84c58" :weight bold)) (t (:foreground "#e84c58" :weight bold))))
 '(diredfl-read-priv ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(diredfl-symlink ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(diredfl-tagged-autofile-name ((((class color) (min-colors 16777215)) (:foreground "#eed891" :underline t)) (((class color) (min-colors 255)) (:foreground "#eed891" :underline t)) (t (:foreground "#eed891" :underline t))))
 '(diredfl-write-priv ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(jabber-activity-face ((((class color) (min-colors 16777215)) (:foreground "#d24b83" :weight bold)) (((class color) (min-colors 255)) (:foreground "#d24b83" :weight bold)) (t (:foreground "#d24b83" :weight bold))))
 '(jabber-activity-personal-face ((((class color) (min-colors 16777215)) (:foreground "#7CF083" :weight bold)) (((class color) (min-colors 255)) (:foreground "#7CF083" :weight bold)) (t (:foreground "#7CF083" :weight bold))))
 '(jabber-chat-error ((((class color) (min-colors 16777215)) (:foreground "#e84c58" :weight bold)) (((class color) (min-colors 255)) (:foreground "#e84c58" :weight bold)) (t (:foreground "#e84c58" :weight bold))))
 '(jabber-chat-prompt-foreign ((((class color) (min-colors 16777215)) (:foreground "#cea2ca" :weight bold)) (((class color) (min-colors 255)) (:foreground "#cea2ca" :weight bold)) (t (:foreground "#cea2ca" :weight bold))))
 '(jabber-chat-prompt-local ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :weight bold)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :weight bold)) (t (:foreground "#4ca6e8" :weight bold))))
 '(jabber-chat-prompt-system ((((class color) (min-colors 16777215)) (:foreground "#5D8272" :weight bold)) (((class color) (min-colors 255)) (:foreground "#5D8272" :weight bold)) (t (:foreground "#5D8272" :weight bold))))
 '(jabber-chat-text-foreign ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(jabber-chat-text-local ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(jabber-rare-time-face ((((class color) (min-colors 16777215)) (:foreground "#5D8272")) (((class color) (min-colors 255)) (:foreground "#5D8272")) (t (:foreground "#5D8272"))))
 '(jabber-roster-user-away ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(jabber-roster-user-chatty ((((class color) (min-colors 16777215)) (:foreground "#65E6A7" :weight bold)) (((class color) (min-colors 255)) (:foreground "#65E6A7" :weight bold)) (t (:foreground "#65E6A7" :weight bold))))
 '(jabber-roster-user-dnd ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(jabber-roster-user-error ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(jabber-roster-user-offline ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(jabber-roster-user-online ((((class color) (min-colors 16777215)) (:foreground "#65E6A7" :weight bold)) (((class color) (min-colors 255)) (:foreground "#65E6A7" :weight bold)) (t (:foreground "#65E6A7" :weight bold))))
 '(jabber-roster-user-xa ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(hl-line ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(highlight-numbers-number ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(highlight-quoted-quote ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(highlight-quoted-symbol ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(highlight-symbol-face ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(highlight-indent-guides-odd-face ((((class color) (min-colors 16777215)) (:background "#545c5e")) (((class color) (min-colors 255)) (:background "#545c5e")) (t (:background "#545c5e"))))
 '(highlight-indent-guides-even-face ((((class color) (min-colors 16777215)) (:background "#545c5e")) (((class color) (min-colors 255)) (:background "#545c5e")) (t (:background "#545c5e"))))
 '(highlight-indent-guides-character-face ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(indent-guide-face ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(highlight-indentation-face ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(highlight-indentation-current-column-face ((((class color) (min-colors 16777215)) (:background "#28283a")) (((class color) (min-colors 255)) (:background "#303035")) (t (:background "#303035"))))
 '(eldoc-highlight-function-argument ((((class color) (min-colors 16777215)) (:inherit font-lock-constant-face)) (((class color) (min-colors 255)) (:inherit font-lock-constant-face)) (t (:inherit font-lock-constant-face))))
 '(eldoc-box-body ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(eldoc-box-border ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(pulse-highlight-start-face ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(auto-dim-other-buffers-face ((((class color) (min-colors 16777215)) (:background "#0F0F17")) (((class color) (min-colors 255)) (:background "#0F0F17")) (t (:background "#0F0F17"))))
 '(linum ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#545c5e" :bold nil :italic nil :underline nil :strike-through nil)) (((class color) (min-colors 255)) (:background "#222225" :foreground "#545c5e" :bold nil :italic nil :underline nil :strike-through nil)) (t (:background "#222225" :foreground "#545c5e" :bold nil :italic nil :underline nil :strike-through nil))))
 '(linum-highlight-face ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#738FD7" :bold t :italic nil :underline nil :strike-through nil)) (((class color) (min-colors 255)) (:background "#222225" :foreground "#738FD7" :bold t :italic nil :underline nil :strike-through nil)) (t (:background "#222225" :foreground "#738FD7" :bold t :italic nil :underline nil :strike-through nil))))
 '(nlinum-current-line ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#738FD7" :bold t :italic nil :underline nil :strike-through nil)) (((class color) (min-colors 255)) (:background "#222225" :foreground "#738FD7" :bold t :italic nil :underline nil :strike-through nil)) (t (:background "#222225" :foreground "#738FD7" :bold t :italic nil :underline nil :strike-through nil))))
 '(linum-relative-current-line ((((class color) (min-colors 16777215)) (:inherit linum-highlight-face)) (((class color) (min-colors 255)) (:inherit linum-highlight-face)) (t (:inherit linum-highlight-face))))
 '(nlinum-relative-current-face ((((class color) (min-colors 16777215)) (:inherit nlinum-current-line)) (((class color) (min-colors 255)) (:inherit nlinum-current-line)) (t (:inherit nlinum-current-line))))
 '(line-number ((t (:background "#14141e" :foreground "SteelBlue2" :strike-through nil :underline nil :slant normal :weight normal))))
 '(line-number-current-line ((t (:background "#14141e" :foreground "aquamarine3" :strike-through nil :underline nil :slant normal :weight bold))))
 '(which-func ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(which-key-key-face ((((class color) (min-colors 16777215)) (:foreground "#eed891" :bold t)) (((class color) (min-colors 255)) (:foreground "#eed891" :bold t)) (t (:foreground "#eed891" :bold t))))
 '(which-key-group-description-face ((((class color) (min-colors 16777215)) (:foreground "#9d81ba")) (((class color) (min-colors 255)) (:foreground "#9d81ba")) (t (:foreground "#9d81ba"))))
 '(which-key-local-map-description-face ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(which-key-command-description-face ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(ruler-mode-default ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#545c5e")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#545c5e")) (t (:background "#2B2B2F" :foreground "#545c5e"))))
 '(ruler-mode-column-number ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(ruler-mode-current-column ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(ruler-mode-fill-column ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(ruler-mode-comment-column ((((class color) (min-colors 16777215)) (:foreground "#91b9c7")) (((class color) (min-colors 255)) (:foreground "#91b9c7")) (t (:foreground "#91b9c7"))))
 '(ruler-mode-fringes ((((class color) (min-colors 16777215)) (:foreground "#4d9391")) (((class color) (min-colors 255)) (:foreground "#4d9391")) (t (:foreground "#4d9391"))))
 '(ruler-mode-pad ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(ruler-mode-tab-stop ((((class color) (min-colors 16777215)) (:foreground "#ab98b5")) (((class color) (min-colors 255)) (:foreground "#ab98b5")) (t (:foreground "#ab98b5"))))
 '(ruler-mode-goal-column ((((class color) (min-colors 16777215)) (:foreground "#c93237")) (((class color) (min-colors 255)) (:foreground "#c93237")) (t (:foreground "#c93237"))))
 '(message-cited-text-1 ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(message-header-subject ((((class color) (min-colors 16777215)) (:inherit message-header-other :weight bold :foreground "#738FD7")) (((class color) (min-colors 255)) (:inherit message-header-other :weight bold :foreground "#738FD7")) (t (:inherit message-header-other :weight bold :foreground "#738FD7"))))
 '(message-header-to ((((class color) (min-colors 16777215)) (:inherit message-header-other :weight bold :foreground "#cea2ca")) (((class color) (min-colors 255)) (:inherit message-header-other :weight bold :foreground "#cea2ca")) (t (:inherit message-header-other :weight bold :foreground "#cea2ca"))))
 '(message-header-cc ((((class color) (min-colors 16777215)) (:inherit message-header-to)) (((class color) (min-colors 255)) (:inherit message-header-to)) (t (:inherit message-header-to))))
 '(message-header-name ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(message-header-newsgroups ((((class color) (min-colors 16777215)) (:foreground "#d24b83" :slant normal)) (((class color) (min-colors 255)) (:foreground "#d24b83" :slant normal)) (t (:foreground "#d24b83" :slant normal))))
 '(message-header-other ((((class color) (min-colors 16777215)) (:foreground "#f2f2f2" :background nil :weight normal)) (((class color) (min-colors 255)) (:foreground "#f2f2f2" :background nil :weight normal)) (t (:foreground "#f2f2f2" :background nil :weight normal))))
 '(message-mml ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(message-separator ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(notmuch-crypto-decryption ((((class color) (min-colors 16777215)) (:foreground "#d4d4d6" :background "#bc90d4")) (((class color) (min-colors 255)) (:foreground "#d4d4d6" :background "#bc90d4")) (t (:foreground "#d4d4d6" :background "#bc90d4"))))
 '(notmuch-crypto-part-header ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(notmuch-crypto-signature-bad ((((class color) (min-colors 16777215)) (:foreground "#d4d4d6" :background "#e84c58")) (((class color) (min-colors 255)) (:foreground "#d4d4d6" :background "#e84c58")) (t (:foreground "#d4d4d6" :background "#e84c58"))))
 '(notmuch-crypto-signature-good ((((class color) (min-colors 16777215)) (:foreground "#d4d4d6" :background "#65E6A7")) (((class color) (min-colors 255)) (:foreground "#d4d4d6" :background "#65E6A7")) (t (:foreground "#d4d4d6" :background "#65E6A7"))))
 '(notmuch-crypto-signature-good-key ((((class color) (min-colors 16777215)) (:foreground "#d4d4d6" :background "#dbac66")) (((class color) (min-colors 255)) (:foreground "#d4d4d6" :background "#dbac66")) (t (:foreground "#d4d4d6" :background "#dbac66"))))
 '(notmuch-crypto-signature-unknown ((((class color) (min-colors 16777215)) (:foreground "#d4d4d6" :background "#e84c58")) (((class color) (min-colors 255)) (:foreground "#d4d4d6" :background "#e84c58")) (t (:foreground "#d4d4d6" :background "#e84c58"))))
 '(notmuch-hello-logo-background ((((class color) (min-colors 16777215)) (:background "#14141e")) (((class color) (min-colors 255)) (:background "#222225")) (t (:background "#222225"))))
 '(notmuch-message-summary-face ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(notmuch-search-flagged-face ((((class color) (min-colors 16777215)) (:foreground "#0ed49b")) (((class color) (min-colors 255)) (:foreground "#0ed49b")) (t (:foreground "#0ed49b"))))
 '(notmuch-search-non-matching-authors ((((class color) (min-colors 16777215)) (:foreground "#bebec4")) (((class color) (min-colors 255)) (:foreground "#bebec4")) (t (:foreground "#bebec4"))))
 '(notmuch-search-unread-face ((((class color) (min-colors 16777215)) (:weight bold)) (((class color) (min-colors 255)) (:weight bold)) (t (:weight bold))))
 '(notmuch-tag-added ((((class color) (min-colors 16777215)) (:underline "#35BF88")) (((class color) (min-colors 255)) (:underline "#35BF88")) (t (:underline "#35BF88"))))
 '(notmuch-tag-deleted ((((class color) (min-colors 16777215)) (:strike-through "#e84c58")) (((class color) (min-colors 255)) (:strike-through "#e84c58")) (t (:strike-through "#e84c58"))))
 '(notmuch-tag-face ((((class color) (min-colors 16777215)) (:background "#28283a")) (((class color) (min-colors 255)) (:background "#303035")) (t (:background "#303035"))))
 '(notmuch-tag-flagged ((((class color) (min-colors 16777215)) (:foreground "#0ed49b")) (((class color) (min-colors 255)) (:foreground "#0ed49b")) (t (:foreground "#0ed49b"))))
 '(notmuch-tag-unread ((((class color) (min-colors 16777215)) (:background "#dbac66")) (((class color) (min-colors 255)) (:background "#dbac66")) (t (:background "#dbac66"))))
 '(notmuch-tree-match-author-face ((((class color) (min-colors 16777215)) (:weight bold)) (((class color) (min-colors 255)) (:weight bold)) (t (:weight bold))))
 '(notmuch-tree-match-tag-face ((((class color) (min-colors 16777215)) (:weight bold :background "#28283a")) (((class color) (min-colors 255)) (:weight bold :background "#303035")) (t (:weight bold :background "#303035"))))
 '(notmuch-tree-no-match-face ((((class color) (min-colors 16777215)) (:foreground "#bebec4")) (((class color) (min-colors 255)) (:foreground "#bebec4")) (t (:foreground "#bebec4"))))
 '(notmuch-wash-cited-text ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(notmuch-wash-toggle-button ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(elfeed-search-tag-face ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(elfeed-search-feed-face ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(elfeed-search-date-face ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(elfeed-search-filter-face ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(elfeed-search-unread-title-face ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(elfeed-search-unread-count-face ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(elfeed-search-title-face ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(elfeed-log-date-face ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(elfeed-log-date-fil ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(elfeed-log-info-level-face ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(elfeed-log-warn-level-face ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(elfeed-log-debug-level-face ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(elfeed-log-error-level-face ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(telephone-line-accent-active ((((class color) (min-colors 16777215)) (:inherit mode-line :background "#28283a" :foreground "#bebec4")) (((class color) (min-colors 255)) (:inherit mode-line :background "#303035" :foreground "#bebec4")) (t (:inherit mode-line :background "#303035" :foreground "#bebec4"))))
 '(telephone-line-accent-inactive ((((class color) (min-colors 16777215)) (:inherit mode-line-inactive :background "#1d1d2b" :foreground "#545c5e")) (((class color) (min-colors 255)) (:inherit mode-line-inactive :background "#2B2B2F" :foreground "#545c5e")) (t (:inherit mode-line-inactive :background "#2B2B2F" :foreground "#545c5e"))))
 '(telephone-line-evil ((((class color) (min-colors 16777215)) (:inherit mode-line)) (((class color) (min-colors 255)) (:inherit mode-line)) (t (:inherit mode-line))))
 '(telephone-line-evil-normal ((((class color) (min-colors 16777215)) (:inherit telephone-line-evil :background "#28283a" :foreground "#738FD7")) (((class color) (min-colors 255)) (:inherit telephone-line-evil :background "#303035" :foreground "#738FD7")) (t (:inherit telephone-line-evil :background "#303035" :foreground "#738FD7"))))
 '(telephone-line-evil-insert ((((class color) (min-colors 16777215)) (:inherit telephone-line-evil :background "#28283a" :foreground "#65E6A7")) (((class color) (min-colors 255)) (:inherit telephone-line-evil :background "#303035" :foreground "#65E6A7")) (t (:inherit telephone-line-evil :background "#303035" :foreground "#65E6A7"))))
 '(telephone-line-evil-visual ((((class color) (min-colors 16777215)) (:inherit telephone-line-evil :background "#28283a" :foreground "#c79af4")) (((class color) (min-colors 255)) (:inherit telephone-line-evil :background "#303035" :foreground "#c79af4")) (t (:inherit telephone-line-evil :background "#303035" :foreground "#c79af4"))))
 '(telephone-line-evil-replace ((((class color) (min-colors 16777215)) (:inherit telephone-line-evil :background "#28283a" :foreground "#d24b83")) (((class color) (min-colors 255)) (:inherit telephone-line-evil :background "#303035" :foreground "#d24b83")) (t (:inherit telephone-line-evil :background "#303035" :foreground "#d24b83"))))
 '(telephone-line-evil-motion ((((class color) (min-colors 16777215)) (:inherit telephone-line-evil :background "#28283a" :foreground "#dbac66")) (((class color) (min-colors 255)) (:inherit telephone-line-evil :background "#303035" :foreground "#dbac66")) (t (:inherit telephone-line-evil :background "#303035" :foreground "#dbac66"))))
 '(telephone-line-evil-operator ((((class color) (min-colors 16777215)) (:inherit telephone-line-evil :background "#28283a" :foreground "#d24b83")) (((class color) (min-colors 255)) (:inherit telephone-line-evil :background "#303035" :foreground "#d24b83")) (t (:inherit telephone-line-evil :background "#303035" :foreground "#d24b83"))))
 '(telephone-line-evil-emacs ((((class color) (min-colors 16777215)) (:inherit telephone-line-evil :background "#28283a" :foreground "#9587DD")) (((class color) (min-colors 255)) (:inherit telephone-line-evil :background "#303035" :foreground "#9587DD")) (t (:inherit telephone-line-evil :background "#303035" :foreground "#9587DD"))))
 '(telephone-line-projectile ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(doom-modeline-bar ((((class color) (min-colors 16777215)) (:background "#738FD7")) (((class color) (min-colors 255)) (:background "#738FD7")) (t (:background "#738FD7"))))
 '(doom-modeline-inactive-bar ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(doom-modeline-evil-normal-state ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(doom-modeline-evil-insert-state ((((class color) (min-colors 16777215)) (:foreground "#65E6A7")) (((class color) (min-colors 255)) (:foreground "#65E6A7")) (t (:foreground "#65E6A7"))))
 '(doom-modeline-evil-visual-state ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(doom-modeline-evil-replace-state ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(doom-modeline-evil-motion-state ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(doom-modeline-evil-operator-state ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(doom-modeline-evil-emacs-state ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(doom-modeline-panel ((((class color) (min-colors 16777215)) (:background "#0ed49b" :foreground "#1d1d2b")) (((class color) (min-colors 255)) (:background "#0ed49b" :foreground "#2B2B2F")) (t (:background "#0ed49b" :foreground "#2B2B2F"))))
 '(doom-modeline-buffer-path ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(doom-modeline-buffer-major-mode ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(powerline-active0 ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#e6e6e8")) (t (:background "#303035" :foreground "#e6e6e8"))))
 '(powerline-active1 ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#4ca6e8")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#4ca6e8")) (t (:background "#303035" :foreground "#4ca6e8"))))
 '(powerline-active2 ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#4ca6e8")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#4ca6e8")) (t (:background "#2B2B2F" :foreground "#4ca6e8"))))
 '(powerline-inactive0 ((((class color) (min-colors 16777215)) (:inherit mode-line-inactive)) (((class color) (min-colors 255)) (:inherit mode-line-inactive)) (t (:inherit mode-line-inactive))))
 '(powerline-inactive1 ((((class color) (min-colors 16777215)) (:inherit mode-line-inactive)) (((class color) (min-colors 255)) (:inherit mode-line-inactive)) (t (:inherit mode-line-inactive))))
 '(powerline-inactive2 ((((class color) (min-colors 16777215)) (:inherit mode-line-inactive)) (((class color) (min-colors 255)) (:inherit mode-line-inactive)) (t (:inherit mode-line-inactive))))
 '(spaceline-highlight-face ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#0ed49b" :bold nil)) (((class color) (min-colors 255)) (:background "#303035" :foreground "#0ed49b" :bold nil)) (t (:background "#303035" :foreground "#0ed49b" :bold nil))))
 '(sml/line-number ((((class color) (min-colors 16777215)) (:foreground "#92c550")) (((class color) (min-colors 255)) (:foreground "#92c550")) (t (:foreground "#92c550"))))
 '(sml/modes ((((class color) (min-colors 16777215)) (:foreground "#845A84")) (((class color) (min-colors 255)) (:foreground "#845A84")) (t (:foreground "#845A84"))))
 '(sml/global ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(sml/filename ((((class color) (min-colors 16777215)) (:foreground "#4d9391")) (((class color) (min-colors 255)) (:foreground "#4d9391")) (t (:foreground "#4d9391"))))
 '(sml/charging ((((class color) (min-colors 16777215)) (:foreground "#4d9391")) (((class color) (min-colors 255)) (:foreground "#4d9391")) (t (:foreground "#4d9391"))))
 '(sml/discharging ((((class color) (min-colors 16777215)) (:foreground "#cd5c60")) (((class color) (min-colors 255)) (:foreground "#cd5c60")) (t (:foreground "#cd5c60"))))
 '(sml/modified ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(sml/outside-modified ((((class color) (min-colors 16777215)) (:background "#c93237" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#c93237" :foreground "#e6e6e8")) (t (:background "#c93237" :foreground "#e6e6e8"))))
 '(sml/prefix ((((class color) (min-colors 16777215)) (:foreground "#bebec4")) (((class color) (min-colors 255)) (:foreground "#bebec4")) (t (:foreground "#bebec4"))))
 '(sml/read-only ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(fic-face ((((class color) (min-colors 16777215)) (:background nil :foreground "#d24b83" :bold t)) (((class color) (min-colors 255)) (:background nil :foreground "#d24b83" :bold t)) (t (:background nil :foreground "#d24b83" :bold t))))
 '(fic-author-face ((((class color) (min-colors 16777215)) (:background nil :foreground "#d24b83" :bold t)) (((class color) (min-colors 255)) (:background nil :foreground "#d24b83" :bold t)) (t (:background nil :foreground "#d24b83" :bold t))))
 '(hl-todo ((((class color) (min-colors 16777215)) (:background nil :foreground "#d24b83" :bold t)) (((class color) (min-colors 255)) (:background nil :foreground "#d24b83" :bold t)) (t (:background nil :foreground "#d24b83" :bold t))))
 '(ac-completion-face ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :underline t)) (((class color) (min-colors 255)) (:foreground "#738FD7" :underline t)) (t (:foreground "#738FD7" :underline t))))
 '(icompletep-determined ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(Info-quoted ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(info-quoted-name ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(info-string ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(info-menu-star ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(info-index-match ((((class color) (min-colors 16777215)) (:inherit match)) (((class color) (min-colors 255)) (:inherit match)) (t (:inherit match))))
 '(info-node ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(info-menu-header ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :weight bold :height 1.1)) (((class color) (min-colors 255)) (:foreground "#738FD7" :weight bold :height 1.1)) (t (:foreground "#738FD7" :weight bold :height 1.1))))
 '(info-title-1 ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :weight bold :height 1.3)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :weight bold :height 1.3)) (t (:foreground "#4ca6e8" :weight bold :height 1.3))))
 '(info-title-2 ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :weight bold :height 1.2)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :weight bold :height 1.2)) (t (:foreground "#4ca6e8" :weight bold :height 1.2))))
 '(info-title-3 ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :weight bold :height 1.1)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :weight bold :height 1.1)) (t (:foreground "#4ca6e8" :weight bold :height 1.1))))
 '(info-title-4 ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :weight bold)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :weight bold)) (t (:foreground "#4ca6e8" :weight bold))))
 '(helpful-heading ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :weight bold :height 1.1)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :weight bold :height 1.1)) (t (:foreground "#4ca6e8" :weight bold :height 1.1))))
 '(company-tooltip ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#d4d4d6" :bold t)) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#d4d4d6" :bold t)) (t (:background "#2B2B2F" :foreground "#d4d4d6" :bold t))))
 '(company-tooltip-common ((((class color) (min-colors 16777215)) (:foreground "#0ed49b" :underline t)) (((class color) (min-colors 255)) (:foreground "#0ed49b" :underline t)) (t (:foreground "#0ed49b" :underline t))))
 '(company-tooltip-common-selection ((((class color) (min-colors 16777215)) (:foreground "#0ed49b" :underline t)) (((class color) (min-colors 255)) (:foreground "#0ed49b" :underline t)) (t (:foreground "#0ed49b" :underline t))))
 '(company-tooltip-selection ((((class color) (min-colors 16777215)) (:background "#32324a" :foreground "#eed891")) (((class color) (min-colors 255)) (:background "#353b3c" :foreground "#eed891")) (t (:background "#353b3c" :foreground "#eed891"))))
 '(company-tooltip-mouse ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#eed891")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#eed891")) (t (:background "#303035" :foreground "#eed891"))))
 '(company-tooltip-annotation ((((class color) (min-colors 16777215)) (:foreground "#5D8272")) (((class color) (min-colors 255)) (:foreground "#5D8272")) (t (:foreground "#5D8272"))))
 '(company-tooltip-search ((((class color) (min-colors 16777215)) (:background "#0ed49b" :foreground "#14141e" :distant-foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#0ed49b" :foreground "#222225" :distant-foreground "#e6e6e8")) (t (:background "#0ed49b" :foreground "#222225" :distant-foreground "#e6e6e8"))))
 '(company-tooltip-search-selection ((((class color) (min-colors 16777215)) (:background "#2E403B")) (((class color) (min-colors 255)) (:background "#2E403B")) (t (:background "#2E403B"))))
 '(company-scrollbar-bg ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(company-scrollbar-fg ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(company-template-field ((((class color) (min-colors 16777215)) (:foreground "#545c5e" :underline t)) (((class color) (min-colors 255)) (:foreground "#545c5e" :underline t)) (t (:foreground "#545c5e" :underline t))))
 '(company-echo-common ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#dbac66")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#dbac66")) (t (:background "#222225" :foreground "#dbac66"))))
 '(company-preview ((((class color) (min-colors 16777215)) (:background nil :foreground "#738FD7")) (((class color) (min-colors 255)) (:background nil :foreground "#738FD7")) (t (:background nil :foreground "#738FD7"))))
 '(company-preview-common ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#dbac66")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#dbac66")) (t (:background "#2B2B2F" :foreground "#dbac66"))))
 '(company-preview-search ((((class color) (min-colors 16777215)) (:inherit company-tooltip-search)) (((class color) (min-colors 255)) (:inherit company-tooltip-search)) (t (:inherit company-tooltip-search))))
 '(all-the-icons-red ((((class color) (min-colors 16777215)) (:foreground "#cd5c60")) (((class color) (min-colors 255)) (:foreground "#cd5c60")) (t (:foreground "#cd5c60"))))
 '(all-the-icons-red-alt ((((class color) (min-colors 16777215)) (:foreground "#c93237")) (((class color) (min-colors 255)) (:foreground "#c93237")) (t (:foreground "#c93237"))))
 '(all-the-icons-lred ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(all-the-icons-dred ((((class color) (min-colors 16777215)) (:foreground "#832729")) (((class color) (min-colors 255)) (:foreground "#832729")) (t (:foreground "#832729"))))
 '(all-the-icons-green ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(all-the-icons-lgreen ((((class color) (min-colors 16777215)) (:foreground "#65E6A7")) (((class color) (min-colors 255)) (:foreground "#65E6A7")) (t (:foreground "#65E6A7"))))
 '(all-the-icons-dgreen ((((class color) (min-colors 16777215)) (:foreground "#39855f")) (((class color) (min-colors 255)) (:foreground "#39855f")) (t (:foreground "#39855f"))))
 '(all-the-icons-yellow ((((class color) (min-colors 16777215)) (:foreground "#eae46a")) (((class color) (min-colors 255)) (:foreground "#eae46a")) (t (:foreground "#eae46a"))))
 '(all-the-icons-lyellow ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(all-the-icons-dyellow ((((class color) (min-colors 16777215)) (:foreground "#b87e3c")) (((class color) (min-colors 255)) (:foreground "#b87e3c")) (t (:foreground "#b87e3c"))))
 '(all-the-icons-orange ((((class color) (min-colors 16777215)) (:foreground "#ca6036")) (((class color) (min-colors 255)) (:foreground "#ca6036")) (t (:foreground "#ca6036"))))
 '(all-the-icons-lorange ((((class color) (min-colors 16777215)) (:foreground "#ee7042")) (((class color) (min-colors 255)) (:foreground "#ee7042")) (t (:foreground "#ee7042"))))
 '(all-the-icons-dorange ((((class color) (min-colors 16777215)) (:foreground "#a14223")) (((class color) (min-colors 255)) (:foreground "#a14223")) (t (:foreground "#a14223"))))
 '(all-the-icons-blue ((((class color) (min-colors 16777215)) (:foreground "#4c7de8")) (((class color) (min-colors 255)) (:foreground "#4c7de8")) (t (:foreground "#4c7de8"))))
 '(all-the-icons-blue-alt ((((class color) (min-colors 16777215)) (:foreground "#2683b5")) (((class color) (min-colors 255)) (:foreground "#2683b5")) (t (:foreground "#2683b5"))))
 '(all-the-icons-lblue ((((class color) (min-colors 16777215)) (:foreground "#41b0f3")) (((class color) (min-colors 255)) (:foreground "#41b0f3")) (t (:foreground "#41b0f3"))))
 '(all-the-icons-dblue ((((class color) (min-colors 16777215)) (:foreground "#1c5f87")) (((class color) (min-colors 255)) (:foreground "#1c5f87")) (t (:foreground "#1c5f87"))))
 '(all-the-icons-maroon ((((class color) (min-colors 16777215)) (:foreground "#e55c7a")) (((class color) (min-colors 255)) (:foreground "#e55c7a")) (t (:foreground "#e55c7a"))))
 '(all-the-icons-lmaroon ((((class color) (min-colors 16777215)) (:foreground "#ef6787")) (((class color) (min-colors 255)) (:foreground "#ef6787")) (t (:foreground "#ef6787"))))
 '(all-the-icons-dmaroon ((((class color) (min-colors 16777215)) (:foreground "#941b37")) (((class color) (min-colors 255)) (:foreground "#941b37")) (t (:foreground "#941b37"))))
 '(all-the-icons-purple ((((class color) (min-colors 16777215)) (:foreground "#8B48CF")) (((class color) (min-colors 255)) (:foreground "#8B48CF")) (t (:foreground "#8B48CF"))))
 '(all-the-icons-lpurple ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(all-the-icons-dpurple ((((class color) (min-colors 16777215)) (:foreground "#73229E")) (((class color) (min-colors 255)) (:foreground "#73229E")) (t (:foreground "#73229E"))))
 '(all-the-icons-cyan ((((class color) (min-colors 16777215)) (:foreground "#57bfc2")) (((class color) (min-colors 255)) (:foreground "#57bfc2")) (t (:foreground "#57bfc2"))))
 '(all-the-icons-cyan-alt ((((class color) (min-colors 16777215)) (:foreground "#49bdb0")) (((class color) (min-colors 255)) (:foreground "#49bdb0")) (t (:foreground "#49bdb0"))))
 '(all-the-icons-lcyan ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(all-the-icons-dcyan ((((class color) (min-colors 16777215)) (:foreground "#09878b")) (((class color) (min-colors 255)) (:foreground "#09878b")) (t (:foreground "#09878b"))))
 '(all-the-icons-pink ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(all-the-icons-lpink ((((class color) (min-colors 16777215)) (:foreground "#fbaed2")) (((class color) (min-colors 255)) (:foreground "#fbaed2")) (t (:foreground "#fbaed2"))))
 '(all-the-icons-dpink ((((class color) (min-colors 16777215)) (:foreground "#9E2256")) (((class color) (min-colors 255)) (:foreground "#9E2256")) (t (:foreground "#9E2256"))))
 '(all-the-icons-silver ((((class color) (min-colors 16777215)) (:foreground "#7c878a")) (((class color) (min-colors 255)) (:foreground "#7c878a")) (t (:foreground "#7c878a"))))
 '(all-the-icons-lsilver ((((class color) (min-colors 16777215)) (:foreground "#919a9c")) (((class color) (min-colors 255)) (:foreground "#919a9c")) (t (:foreground "#919a9c"))))
 '(all-the-icons-dsilver ((((class color) (min-colors 16777215)) (:foreground "#60696b")) (((class color) (min-colors 255)) (:foreground "#60696b")) (t (:foreground "#60696b"))))
 '(magit-section-highlight ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(magit-section-heading ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(magit-section-heading-selection ((((class color) (min-colors 16777215)) (:foreground "#eed891" :bold t)) (((class color) (min-colors 255)) (:foreground "#eed891" :bold t)) (t (:foreground "#eed891" :bold t))))
 '(magit-item-highlight ((((class color) (min-colors 16777215)) (:background "#28283a")) (((class color) (min-colors 255)) (:background "#303035")) (t (:background "#303035"))))
 '(magit-blame-heading ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#c79af4")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#c79af4")) (t (:background "#303035" :foreground "#c79af4"))))
 '(magit-branch ((((class color) (min-colors 16777215)) (:foreground "#57bfc2")) (((class color) (min-colors 255)) (:foreground "#57bfc2")) (t (:foreground "#57bfc2"))))
 '(magit-branch-local ((((class color) (min-colors 16777215)) (:foreground "#57bfc2")) (((class color) (min-colors 255)) (:foreground "#57bfc2")) (t (:foreground "#57bfc2"))))
 '(magit-branch-remote ((((class color) (min-colors 16777215)) (:foreground "#47ba99")) (((class color) (min-colors 255)) (:foreground "#47ba99")) (t (:foreground "#47ba99"))))
 '(magit-hunk-heading ((((class color) (min-colors 16777215)) (:background "#28283a")) (((class color) (min-colors 255)) (:background "#303035")) (t (:background "#303035"))))
 '(magit-hunk-heading-highlight ((((class color) (min-colors 16777215)) (:background "#28283a")) (((class color) (min-colors 255)) (:background "#303035")) (t (:background "#303035"))))
 '(magit-diff-hunk-heading ((((class color) (min-colors 16777215)) (:background "#28283a")) (((class color) (min-colors 255)) (:background "#303035")) (t (:background "#303035"))))
 '(magit-diff-hunk-heading-highlight ((((class color) (min-colors 16777215)) (:background "#32324a" :foreground "#4ca6e8")) (((class color) (min-colors 255)) (:background "#353b3c" :foreground "#4ca6e8")) (t (:background "#353b3c" :foreground "#4ca6e8"))))
 '(magit-diff-file-heading ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8" :bold t)) (((class color) (min-colors 255)) (:foreground "#e6e6e8" :bold t)) (t (:foreground "#e6e6e8" :bold t))))
 '(magit-diff-file-heading-highlight ((((class color) (min-colors 16777215)) (:background "#28283a" :bold t)) (((class color) (min-colors 255)) (:background "#303035" :bold t)) (t (:background "#303035" :bold t))))
 '(magit-diff-base ((((class color) (min-colors 16777215)) (:background "#ee7042" :foreground "#d4d4d6")) (((class color) (min-colors 255)) (:background "#ee7042" :foreground "#d4d4d6")) (t (:background "#ee7042" :foreground "#d4d4d6"))))
 '(magit-diff-base-highlight ((((class color) (min-colors 16777215)) (:background "#ee7042" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#ee7042" :foreground "#e6e6e8")) (t (:background "#ee7042" :foreground "#e6e6e8"))))
 '(magit-diff-context ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#c9c9cd")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#c9c9cd")) (t (:background "#222225" :foreground "#c9c9cd"))))
 '(magit-diff-context-highlight ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#d4d4d6")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#d4d4d6")) (t (:background "#2B2B2F" :foreground "#d4d4d6"))))
 '(magit-diff-added ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#39855f")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#39855f")) (t (:background "#222225" :foreground "#39855f"))))
 '(magit-diff-added-highlight ((((class color) (min-colors 16777215)) (:background "#39855f" :foreground "#f2f2f2")) (((class color) (min-colors 255)) (:background "#39855f" :foreground "#f2f2f2")) (t (:background "#39855f" :foreground "#f2f2f2"))))
 '(magit-diff-removed ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#a0586c")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#a0586c")) (t (:background "#222225" :foreground "#a0586c"))))
 '(magit-diff-removed-highlight ((((class color) (min-colors 16777215)) (:background "#a0586c" :foreground "#f2f2f2")) (((class color) (min-colors 255)) (:background "#a0586c" :foreground "#f2f2f2")) (t (:background "#a0586c" :foreground "#f2f2f2"))))
 '(magit-diffstat-added ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(magit-diffstat-removed ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(magit-tag ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(magit-hash ((((class color) (min-colors 16777215)) (:inherit magit-tag)) (((class color) (min-colors 255)) (:inherit magit-tag)) (t (:inherit magit-tag))))
 '(magit-dimmed ((((class color) (min-colors 16777215)) (:inherit shadow)) (((class color) (min-colors 255)) (:inherit shadow)) (t (:inherit shadow))))
 '(magit-log-author ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(magit-log-date ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(magit-log-graph ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(magit-process-ok ((((class color) (min-colors 16777215)) (:foreground "#65E6A7" :bold t)) (((class color) (min-colors 255)) (:foreground "#65E6A7" :bold t)) (t (:foreground "#65E6A7" :bold t))))
 '(magit-process-ng ((((class color) (min-colors 16777215)) (:foreground "#dbac66" :bold t)) (((class color) (min-colors 255)) (:foreground "#dbac66" :bold t)) (t (:foreground "#dbac66" :bold t))))
 '(magit-reflog-amend ((((class color) (min-colors 16777215)) (:foreground "#8B48CF")) (((class color) (min-colors 255)) (:foreground "#8B48CF")) (t (:foreground "#8B48CF"))))
 '(magit-reflog-checkout ((((class color) (min-colors 16777215)) (:foreground "#41b0f3")) (((class color) (min-colors 255)) (:foreground "#41b0f3")) (t (:foreground "#41b0f3"))))
 '(magit-reflog-cherry-pick ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(magit-reflog-commit ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(magit-reflog-merge ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(magit-reflog-rebase ((((class color) (min-colors 16777215)) (:foreground "#8B48CF")) (((class color) (min-colors 255)) (:foreground "#8B48CF")) (t (:foreground "#8B48CF"))))
 '(magit-reflog-remote ((((class color) (min-colors 16777215)) (:foreground "#57bfc2")) (((class color) (min-colors 255)) (:foreground "#57bfc2")) (t (:foreground "#57bfc2"))))
 '(magit-reflog-reset ((((class color) (min-colors 16777215)) (:foreground "#e84c58" :bold t)) (((class color) (min-colors 255)) (:foreground "#e84c58" :bold t)) (t (:foreground "#e84c58" :bold t))))
 '(magit-reflog-other ((((class color) (min-colors 16777215)) (:foreground "#57bfc2")) (((class color) (min-colors 255)) (:foreground "#57bfc2")) (t (:foreground "#57bfc2"))))
 '(magit-refname ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(magit-sequence-head ((((class color) (min-colors 16777215)) (:foreground "#2683b5")) (((class color) (min-colors 255)) (:foreground "#2683b5")) (t (:foreground "#2683b5"))))
 '(magit-sequence-drop ((((class color) (min-colors 16777215)) (:foreground "#cd5c60")) (((class color) (min-colors 255)) (:foreground "#cd5c60")) (t (:foreground "#cd5c60"))))
 '(magit-sequence-part ((((class color) (min-colors 16777215)) (:foreground "#E3D168")) (((class color) (min-colors 255)) (:foreground "#E3D168")) (t (:foreground "#E3D168"))))
 '(magit-sequence-stop ((((class color) (min-colors 16777215)) (:inherit success)) (((class color) (min-colors 255)) (:inherit success)) (t (:inherit success))))
 '(magit-cherry-equivalent ((((class color) (min-colors 16777215)) (:foreground "#8B48CF")) (((class color) (min-colors 255)) (:foreground "#8B48CF")) (t (:foreground "#8B48CF"))))
 '(magit-cherry-unmatched ((((class color) (min-colors 16777215)) (:foreground "#57bfc2")) (((class color) (min-colors 255)) (:foreground "#57bfc2")) (t (:foreground "#57bfc2"))))
 '(magit-bisect-good ((((class color) (min-colors 16777215)) (:foreground "#47ba99")) (((class color) (min-colors 255)) (:foreground "#47ba99")) (t (:foreground "#47ba99"))))
 '(magit-bisect-bad ((((class color) (min-colors 16777215)) (:foreground "#c93237")) (((class color) (min-colors 255)) (:foreground "#c93237")) (t (:foreground "#c93237"))))
 '(magit-bisect-skip ((((class color) (min-colors 16777215)) (:foreground "#a8c749")) (((class color) (min-colors 255)) (:foreground "#a8c749")) (t (:foreground "#a8c749"))))
 '(magit-signature-good ((((class color) (min-colors 16777215)) (:foreground "#65E6A7")) (((class color) (min-colors 255)) (:foreground "#65E6A7")) (t (:foreground "#65E6A7"))))
 '(magit-signature-bad ((((class color) (min-colors 16777215)) (:foreground "#c93237")) (((class color) (min-colors 255)) (:foreground "#c93237")) (t (:foreground "#c93237"))))
 '(magit-signature-untrusted ((((class color) (min-colors 16777215)) (:foreground "#57bfc2")) (((class color) (min-colors 255)) (:foreground "#57bfc2")) (t (:foreground "#57bfc2"))))
 '(magit-popup-key ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(transient-heading ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(transient-key ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(transient-argument ((((class color) (min-colors 16777215)) (:foreground "#0ed49b")) (((class color) (min-colors 255)) (:foreground "#0ed49b")) (t (:foreground "#0ed49b"))))
 '(transient-enabled-suffix ((((class color) (min-colors 16777215)) (:background "#65E6A7" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#65E6A7" :foreground "#222225")) (t (:background "#65E6A7" :foreground "#222225"))))
 '(transient-disabled-suffix ((((class color) (min-colors 16777215)) (:background "#e84c58" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#e84c58" :foreground "#222225")) (t (:background "#e84c58" :foreground "#222225"))))
 '(flymake-note ((((class color) (min-colors 16777215)) (:underline (:style wave :color "#65E6A7"))) (((class color) (min-colors 255)) (:underline (:style wave :color "#65E6A7"))) (t (:underline (:style wave :color "#65E6A7")))))
 '(flymake-warning ((((class color) (min-colors 16777215)) (:underline (:style wave :color "#dbac66"))) (((class color) (min-colors 255)) (:underline (:style wave :color "#dbac66"))) (t (:underline (:style wave :color "#dbac66")))))
 '(flymake-error ((((class color) (min-colors 16777215)) (:underline (:style wave :color "#e84c58"))) (((class color) (min-colors 255)) (:underline (:style wave :color "#e84c58"))) (t (:underline (:style wave :color "#e84c58")))))
 '(flycheck-info ((((class color) (min-colors 16777215)) (:underline (:style wave :color "#65E6A7"))) (((class color) (min-colors 255)) (:underline (:style wave :color "#65E6A7"))) (t (:underline (:style wave :color "#65E6A7")))))
 '(flycheck-warning ((((class color) (min-colors 16777215)) (:underline (:style wave :color "#dbac66"))) (((class color) (min-colors 255)) (:underline (:style wave :color "#dbac66"))) (t (:underline (:style wave :color "#dbac66")))))
 '(flycheck-error ((((class color) (min-colors 16777215)) (:underline (:style wave :color "#e84c58"))) (((class color) (min-colors 255)) (:underline (:style wave :color "#e84c58"))) (t (:underline (:style wave :color "#e84c58")))))
 '(flycheck-fringe-error ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(flycheck-fringe-warning ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(flycheck-fringe-info ((((class color) (min-colors 16777215)) (:foreground "#65E6A7")) (((class color) (min-colors 255)) (:foreground "#65E6A7")) (t (:foreground "#65E6A7"))))
 '(flycheck-posframe-face ((((class color) (min-colors 16777215)) (:inherit default)) (((class color) (min-colors 255)) (:inherit default)) (t (:inherit default))))
 '(flycheck-posframe-background-face ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(flycheck-posframe-info-face ((((class color) (min-colors 16777215)) (:inherit flycheck-posframe-face :foreground "#d4d4d6")) (((class color) (min-colors 255)) (:inherit flycheck-posframe-face :foreground "#d4d4d6")) (t (:inherit flycheck-posframe-face :foreground "#d4d4d6"))))
 '(flycheck-posframe-warning-face ((((class color) (min-colors 16777215)) (:inherit flycheck-posframe-face :foreground "#dbac66")) (((class color) (min-colors 255)) (:inherit flycheck-posframe-face :foreground "#dbac66")) (t (:inherit flycheck-posframe-face :foreground "#dbac66"))))
 '(flycheck-posframe-error-face ((((class color) (min-colors 16777215)) (:inherit flycheck-posframe-face :foreground "#e84c58")) (((class color) (min-colors 255)) (:inherit flycheck-posframe-face :foreground "#e84c58")) (t (:inherit flycheck-posframe-face :foreground "#e84c58"))))
 '(flyspell-duplicate ((((class color) (min-colors 16777215)) (:underline (:style wave :color "#dbac66"))) (((class color) (min-colors 255)) (:underline (:style wave :color "#dbac66"))) (t (:underline (:style wave :color "#dbac66")))))
 '(flyspell-incorrect ((((class color) (min-colors 16777215)) (:underline (:style wave :color "#e84c58"))) (((class color) (min-colors 255)) (:underline (:style wave :color "#e84c58"))) (t (:underline (:style wave :color "#e84c58")))))
 '(hydra-face-red ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(hydra-face-teal ((((class color) (min-colors 16777215)) (:foreground "#49bdb0")) (((class color) (min-colors 255)) (:foreground "#49bdb0")) (t (:foreground "#49bdb0"))))
 '(hydra-face-blue ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(hydra-face-pink ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(hydra-face-amaranth ((((class color) (min-colors 16777215)) (:foreground "#bc90d4")) (((class color) (min-colors 255)) (:foreground "#bc90d4")) (t (:foreground "#bc90d4"))))
 '(hydra-posframe-face ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#e6e6e8")) (t (:background "#2B2B2F" :foreground "#e6e6e8"))))
 '(hydra-posframe-border-face ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(ido-indicator ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(ido-first-match ((((class color) (min-colors 16777215)) (:foreground "#0ed49b" :bold t)) (((class color) (min-colors 255)) (:foreground "#0ed49b" :bold t)) (t (:foreground "#0ed49b" :bold t))))
 '(ido-only-match ((((class color) (min-colors 16777215)) (:foreground "#57bfc2")) (((class color) (min-colors 255)) (:foreground "#57bfc2")) (t (:foreground "#57bfc2"))))
 '(ido-subdir ((((class color) (min-colors 16777215)) (:foreground "#9d81ba")) (((class color) (min-colors 255)) (:foreground "#9d81ba")) (t (:foreground "#9d81ba"))))
 '(gnus-header-content ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(gnus-header-from ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(gnus-header-name ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(gnus-header-subject ((((class color) (min-colors 16777215)) (:foreground "#6bd9db" :bold t)) (((class color) (min-colors 255)) (:foreground "#6bd9db" :bold t)) (t (:foreground "#6bd9db" :bold t))))
 '(mu4e-header-marks-face ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(mu4e-view-url-number-face ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(mu4e-cited-1-face ((((class color) (min-colors 16777215)) (:foreground "#d4d4d6")) (((class color) (min-colors 255)) (:foreground "#d4d4d6")) (t (:foreground "#d4d4d6"))))
 '(mu4e-cited-7-face ((((class color) (min-colors 16777215)) (:foreground "#c9c9cd")) (((class color) (min-colors 255)) (:foreground "#c9c9cd")) (t (:foreground "#c9c9cd"))))
 '(ffap ((((class color) (min-colors 16777215)) (:foreground "#bebec4")) (((class color) (min-colors 255)) (:foreground "#bebec4")) (t (:foreground "#bebec4"))))
 '(slime-repl-inputed-output-face ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(js2-private-function-call ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(js2-jsdoc-html-tag-delimiter ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(js2-jsdoc-html-tag-name ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(js2-external-variable ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(js2-function-param ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(js2-error ((((class color) (min-colors 16777215)) (:underline (:color "#e84c58" :style wave))) (((class color) (min-colors 255)) (:underline (:color "#e84c58" :style wave))) (t (:underline (:color "#e84c58" :style wave)))))
 '(js2-function-call ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(js2-object-property ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(js2-jsdoc-value ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(js2-private-member ((((class color) (min-colors 16777215)) (:foreground "#c9c9cd")) (((class color) (min-colors 255)) (:foreground "#c9c9cd")) (t (:foreground "#c9c9cd"))))
 '(js3-function-param-face ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(js3-instance-member-face ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(js3-external-variable-face ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(js3-jsdoc-tag-face ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(js3-warning-face ((((class color) (min-colors 16777215)) (:underline "#738FD7")) (((class color) (min-colors 255)) (:underline "#738FD7")) (t (:underline "#738FD7"))))
 '(js3-error-face ((((class color) (min-colors 16777215)) (:underline "#e84c58")) (((class color) (min-colors 255)) (:underline "#e84c58")) (t (:underline "#e84c58"))))
 '(rst-adornment ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(rst-block ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(rst-level-1 ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(rst-level-2 ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(rst-level-3 ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(rst-level-4 ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(rst-level-5 ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(rst-level-6 ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(font-latex-bold-face ((((class color) (min-colors 16777215)) (:inherit bold)) (((class color) (min-colors 255)) (:inherit bold)) (t (:inherit bold))))
 '(font-latex-italic-face ((((class color) (min-colors 16777215)) (:inherit italic)) (((class color) (min-colors 255)) (:inherit italic)) (t (:inherit italic))))
 '(font-latex-match-reference-keywords ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(font-latex-match-variable-keywords ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(font-latex-warning-face ((((class color) (min-colors 16777215)) (:inherit warning)) (((class color) (min-colors 255)) (:inherit warning)) (t (:inherit warning))))
 '(font-latex-string-face ((((class color) (min-colors 16777215)) (:inherit font-lock-string-face)) (((class color) (min-colors 255)) (:inherit font-lock-string-face)) (t (:inherit font-lock-string-face))))
 '(font-latex-math-face ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(font-latex-sedate-face ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(font-latex-script-char-face ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(font-latex-sectioning-0-face ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :bold t)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :bold t)) (t (:foreground "#4ca6e8" :bold t))))
 '(font-latex-sectioning-1-face ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(font-latex-sectioning-2-face ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(font-latex-sectioning-3-face ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(font-latex-sectioning-4-face ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(font-latex-sectioning-5-face ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(font-latex-verbatim-face ((((class color) (min-colors 16777215)) (:inherit fixed-pitch :foreground "#4ca6e8")) (((class color) (min-colors 255)) (:inherit fixed-pitch :foreground "#4ca6e8")) (t (:inherit fixed-pitch :foreground "#4ca6e8"))))
 '(TeX-error-description-tex-said ((((class color) (min-colors 16777215)) (:inherit success :weight bold)) (((class color) (min-colors 255)) (:inherit success :weight bold)) (t (:inherit success :weight bold))))
 '(TeX-error-description-warning ((((class color) (min-colors 16777215)) (:inherit warning :weight bold)) (((class color) (min-colors 255)) (:inherit warning :weight bold)) (t (:inherit warning :weight bold))))
 '(TeX-error-description-error ((((class color) (min-colors 16777215)) (:inherit error :weight bold)) (((class color) (min-colors 255)) (:inherit error :weight bold)) (t (:inherit error :weight bold))))
 '(undo-tree-visualizer-active-branch-face ((((class color) (min-colors 16777215)) (:foreground "#6bd9db" :bold t)) (((class color) (min-colors 255)) (:foreground "#6bd9db" :bold t)) (t (:foreground "#6bd9db" :bold t))))
 '(undo-tree-visualizer-current-face ((((class color) (min-colors 16777215)) (:foreground "#0ed49b")) (((class color) (min-colors 255)) (:foreground "#0ed49b")) (t (:foreground "#0ed49b"))))
 '(undo-tree-visualizer-default-face ((((class color) (min-colors 16777215)) (:foreground "#d4d4d6")) (((class color) (min-colors 255)) (:foreground "#d4d4d6")) (t (:foreground "#d4d4d6"))))
 '(undo-tree-visualizer-unmodified-face ((((class color) (min-colors 16777215)) (:foreground "#65E6A7")) (((class color) (min-colors 255)) (:foreground "#65E6A7")) (t (:foreground "#65E6A7"))))
 '(undo-tree-visualizer-register-face ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(show-paren-match ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#0ed49b" :bold t)) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#0ed49b" :bold t)) (t (:background "#2B2B2F" :foreground "#0ed49b" :bold t))))
 '(show-paren-mismatch ((((class color) (min-colors 16777215)) (:background "#832729" :foreground "#1d1d2b")) (((class color) (min-colors 255)) (:background "#832729" :foreground "#2B2B2F")) (t (:background "#832729" :foreground "#2B2B2F"))))
 '(rainbow-delimiters-mismatched-face ((((class color) (min-colors 16777215)) (:background "#832729" :foreground "#e84c58")) (((class color) (min-colors 255)) (:background "#832729" :foreground "#e84c58")) (t (:background "#832729" :foreground "#e84c58"))))
 '(rainbow-delimiters-unmatched-face ((((class color) (min-colors 16777215)) (:inherit rainbow-delimiters-mismatched-face)) (((class color) (min-colors 255)) (:inherit rainbow-delimiters-mismatched-face)) (t (:inherit rainbow-delimiters-mismatched-face))))
 '(rainbow-delimiters-base-face ((((class color) (min-colors 16777215)) (:foreground "#807f96")) (((class color) (min-colors 255)) (:foreground "#807f96")) (t (:foreground "#807f96"))))
 '(rainbow-delimiters-depth-1-face ((t (:foreground "DarkGrey"))))
 '(rainbow-delimiters-depth-2-face ((t (:foreground "MediumPurple1"))))
 '(rainbow-delimiters-depth-3-face ((t (:foreground "LightSeaGreen"))))
 '(rainbow-delimiters-depth-4-face ((t (:foreground "IndianRed"))))
 '(rainbow-delimiters-depth-5-face ((t (:foreground "DarkCyan"))))
 '(rainbow-delimiters-depth-6-face ((t (:foreground "RosyBrown4"))))
 '(rainbow-delimiters-depth-7-face ((t (:foreground "#91b9c7"))))
 '(rainbow-delimiters-depth-8-face ((t (:foreground "#cd9575"))))
 '(rainbow-delimiters-depth-9-face ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(diff-context ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(diff-header ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(diff-function ((((class color) (min-colors 16777215)) (:background "#32324a" :foreground "#6bd9db")) (((class color) (min-colors 255)) (:background "#353b3c" :foreground "#6bd9db")) (t (:background "#353b3c" :foreground "#6bd9db"))))
 '(diff-nonexistent ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(diff-hunk-header ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(diff-file-header ((((class color) (min-colors 16777215)) (:background nil :foreground "#738FD7")) (((class color) (min-colors 255)) (:background nil :foreground "#738FD7")) (t (:background nil :foreground "#738FD7"))))
 '(diff-added ((((class color) (min-colors 16777215)) (:background "#39855f" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#39855f" :foreground "#e6e6e8")) (t (:background "#39855f" :foreground "#e6e6e8"))))
 '(diff-changed ((((class color) (min-colors 16777215)) (:background "#cd9575" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#d7af87" :foreground "#e6e6e8")) (t (:background "#d7af87" :foreground "#e6e6e8"))))
 '(diff-removed ((((class color) (min-colors 16777215)) (:background "#a0586c" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#a0586c" :foreground "#e6e6e8")) (t (:background "#a0586c" :foreground "#e6e6e8"))))
 '(diff-refine-added ((((class color) (min-colors 16777215)) (:background "#35BF88" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#35BF88" :foreground "#e6e6e8")) (t (:background "#35BF88" :foreground "#e6e6e8"))))
 '(diff-refine-changed ((((class color) (min-colors 16777215)) (:background "#dbac66" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#dbac66" :foreground "#e6e6e8")) (t (:background "#dbac66" :foreground "#e6e6e8"))))
 '(diff-refine-removed ((((class color) (min-colors 16777215)) (:background "#e84c58" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#e84c58" :foreground "#e6e6e8")) (t (:background "#e84c58" :foreground "#e6e6e8"))))
 '(diff-indicator-added ((((class color) (min-colors 16777215)) (:background "#39855f" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#39855f" :foreground "#e6e6e8")) (t (:background "#39855f" :foreground "#e6e6e8"))))
 '(diff-indicator-changed ((((class color) (min-colors 16777215)) (:background "#cd9575" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#d7af87" :foreground "#e6e6e8")) (t (:background "#d7af87" :foreground "#e6e6e8"))))
 '(diff-indicator-removed ((((class color) (min-colors 16777215)) (:background "#a0586c" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#a0586c" :foreground "#e6e6e8")) (t (:background "#a0586c" :foreground "#e6e6e8"))))
 '(smerge-base ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(smerge-upper ((((class color) (min-colors 16777215)) (:background "#39855f")) (((class color) (min-colors 255)) (:background "#39855f")) (t (:background "#39855f"))))
 '(smerge-lower ((((class color) (min-colors 16777215)) (:background "#a0586c")) (((class color) (min-colors 255)) (:background "#a0586c")) (t (:background "#a0586c"))))
 '(smerge-markers ((((class color) (min-colors 16777215)) (:background "#545c5e" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#545c5e" :foreground "#222225")) (t (:background "#545c5e" :foreground "#222225"))))
 '(smerge-mine ((((class color) (min-colors 16777215)) (:background "#39855f")) (((class color) (min-colors 255)) (:background "#39855f")) (t (:background "#39855f"))))
 '(smerge-other ((((class color) (min-colors 16777215)) (:background "#a0586c")) (((class color) (min-colors 255)) (:background "#a0586c")) (t (:background "#a0586c"))))
 '(ediff-current-diff-Ancestor ((((class color) (min-colors 16777215)) (:background "#cd9575" :foreground "#d4d4d6")) (((class color) (min-colors 255)) (:background "#d7af87" :foreground "#d4d4d6")) (t (:background "#d7af87" :foreground "#d4d4d6"))))
 '(ediff-current-diff-A ((((class color) (min-colors 16777215)) (:background "#832729" :foreground "#d4d4d6")) (((class color) (min-colors 255)) (:background "#832729" :foreground "#d4d4d6")) (t (:background "#832729" :foreground "#d4d4d6"))))
 '(ediff-current-diff-B ((((class color) (min-colors 16777215)) (:background "#39855f" :foreground "#d4d4d6")) (((class color) (min-colors 255)) (:background "#39855f" :foreground "#d4d4d6")) (t (:background "#39855f" :foreground "#d4d4d6"))))
 '(ediff-current-diff-C ((((class color) (min-colors 16777215)) (:background "#09878b" :foreground "#d4d4d6")) (((class color) (min-colors 255)) (:background "#09878b" :foreground "#d4d4d6")) (t (:background "#09878b" :foreground "#d4d4d6"))))
 '(ediff-even-diff-Ancestor ((((class color) (min-colors 16777215)) (:background "#28283a")) (((class color) (min-colors 255)) (:background "#303035")) (t (:background "#303035"))))
 '(ediff-even-diff-A ((((class color) (min-colors 16777215)) (:background "#28283a")) (((class color) (min-colors 255)) (:background "#303035")) (t (:background "#303035"))))
 '(ediff-even-diff-B ((((class color) (min-colors 16777215)) (:background "#28283a")) (((class color) (min-colors 255)) (:background "#303035")) (t (:background "#303035"))))
 '(ediff-even-diff-C ((((class color) (min-colors 16777215)) (:background "#28283a")) (((class color) (min-colors 255)) (:background "#303035")) (t (:background "#303035"))))
 '(ediff-fine-diff-Ancestor ((((class color) (min-colors 16777215)) (:background "#cd9575" :bold t :foreground "#f2f2f2")) (((class color) (min-colors 255)) (:background "#d7af87" :bold t :foreground "#f2f2f2")) (t (:background "#d7af87" :bold t :foreground "#f2f2f2"))))
 '(ediff-fine-diff-A ((((class color) (min-colors 16777215)) (:background "#e84c58" :bold t :foreground "#f2f2f2")) (((class color) (min-colors 255)) (:background "#e84c58" :bold t :foreground "#f2f2f2")) (t (:background "#e84c58" :bold t :foreground "#f2f2f2"))))
 '(ediff-fine-diff-B ((((class color) (min-colors 16777215)) (:background "#35BF88" :bold t :foreground "#f2f2f2")) (((class color) (min-colors 255)) (:background "#35BF88" :bold t :foreground "#f2f2f2")) (t (:background "#35BF88" :bold t :foreground "#f2f2f2"))))
 '(ediff-fine-diff-C ((((class color) (min-colors 16777215)) (:background "#57bfc2" :bold t :foreground "#f2f2f2")) (((class color) (min-colors 255)) (:background "#57bfc2" :bold t :foreground "#f2f2f2")) (t (:background "#57bfc2" :bold t :foreground "#f2f2f2"))))
 '(ediff-odd-diff-Ancestor ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(ediff-odd-diff-A ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(ediff-odd-diff-B ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(ediff-odd-diff-C ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(calendar-today ((((class color) (min-colors 16777215)) (:background "#32324a" :foreground "#738FD7")) (((class color) (min-colors 255)) (:background "#353b3c" :foreground "#738FD7")) (t (:background "#353b3c" :foreground "#738FD7"))))
 '(cfw:face-grid ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(cfw:face-title ((((class color) (min-colors 16777215)) (:foreground "#9587DD" :weight bold :height 1.8)) (((class color) (min-colors 255)) (:foreground "#9587DD" :weight bold :height 1.8)) (t (:foreground "#9587DD" :weight bold :height 1.8))))
 '(cfw:face-default-content ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(cfw:face-day-title ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#e6e6e8")) (t (:background "#303035" :foreground "#e6e6e8"))))
 '(cfw:face-today ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#9587DD")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#9587DD")) (t (:background "#303035" :foreground "#9587DD"))))
 '(cfw:face-today-title ((((class color) (min-colors 16777215)) (:background "#d24b83" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#d24b83" :foreground "#222225")) (t (:background "#d24b83" :foreground "#222225"))))
 '(cfw:face-saturday ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#d24b83")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#d24b83")) (t (:background "#303035" :foreground "#d24b83"))))
 '(cfw:face-sunday ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#d24b83")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#d24b83")) (t (:background "#303035" :foreground "#d24b83"))))
 '(cfw:face-holiday ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#6bd9db")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#6bd9db")) (t (:background "#303035" :foreground "#6bd9db"))))
 '(cfw:face-periods ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(cfw:face-header ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#7CF083")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#7CF083")) (t (:background "#303035" :foreground "#7CF083"))))
 '(cfw:face-annotation ((((class color) (min-colors 16777215)) (:foreground "#5D8272")) (((class color) (min-colors 255)) (:foreground "#5D8272")) (t (:foreground "#5D8272"))))
 '(cfw:face-select ((((class color) (min-colors 16777215)) (:background "#0ed49b" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#0ed49b" :foreground "#222225")) (t (:background "#0ed49b" :foreground "#222225"))))
 '(cfw:face-toolbar ((((class color) (min-colors 16777215)) (:background nil :foreground nil)) (((class color) (min-colors 255)) (:background nil :foreground nil)) (t (:background nil :foreground nil))))
 '(cfw:face-toolbar-button-on ((((class color) (min-colors 16777215)) (:background nil :foreground "#0ed49b")) (((class color) (min-colors 255)) (:background nil :foreground "#0ed49b")) (t (:background nil :foreground "#0ed49b"))))
 '(cfw:face-toolbar-button-off ((((class color) (min-colors 16777215)) (:foreground "#bebec4")) (((class color) (min-colors 255)) (:foreground "#bebec4")) (t (:foreground "#bebec4"))))
 '(cfw:face-disable ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#545c5e")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#545c5e")) (t (:background "#303035" :foreground "#545c5e"))))
 '(imenu-list-entry-face ((((class color) (min-colors 16777215)) (:inherit font-lock-keyword-name-face)) (((class color) (min-colors 255)) (:inherit font-lock-keyword-name-face)) (t (:inherit font-lock-keyword-name-face))))
 '(imenu-list-entry-face-0 ((((class color) (min-colors 16777215)) (:inherit font-lock-keyword-face :height 1.0)) (((class color) (min-colors 255)) (:inherit font-lock-keyword-face :height 1.0)) (t (:inherit font-lock-keyword-face :height 1.0))))
 '(imenu-list-entry-face-1 ((((class color) (min-colors 16777215)) (:inherit font-lock-function-name-face)) (((class color) (min-colors 255)) (:inherit font-lock-function-name-face)) (t (:inherit font-lock-function-name-face))))
 '(imenu-list-entry-face-2 ((((class color) (min-colors 16777215)) (:inherit font-lock-string-face)) (((class color) (min-colors 255)) (:inherit font-lock-string-face)) (t (:inherit font-lock-string-face))))
 '(imenu-list-entry-face-3 ((((class color) (min-colors 16777215)) (:inherit font-lock-type-face)) (((class color) (min-colors 255)) (:inherit font-lock-type-face)) (t (:inherit font-lock-type-face))))
 '(imenu-list-entry-subalist-face-0 ((((class color) (min-colors 16777215)) (:inherit imenu-list-entry-face-0 :bold t)) (((class color) (min-colors 255)) (:inherit imenu-list-entry-face-0 :bold t)) (t (:inherit imenu-list-entry-face-0 :bold t))))
 '(imenu-list-entry-subalist-face-1 ((((class color) (min-colors 16777215)) (:inherit imenu-list-entry-face-1 :bold t)) (((class color) (min-colors 255)) (:inherit imenu-list-entry-face-1 :bold t)) (t (:inherit imenu-list-entry-face-1 :bold t))))
 '(imenu-list-entry-subalist-face-2 ((((class color) (min-colors 16777215)) (:inherit imenu-list-entry-face-2 :bold t)) (((class color) (min-colors 255)) (:inherit imenu-list-entry-face-2 :bold t)) (t (:inherit imenu-list-entry-face-2 :bold t))))
 '(imenu-list-entry-subalist-face-3 ((((class color) (min-colors 16777215)) (:inherit imenu-list-entry-face-3 :bold t)) (((class color) (min-colors 255)) (:inherit imenu-list-entry-face-3 :bold t)) (t (:inherit imenu-list-entry-face-3 :bold t))))
 '(treemacs-root-face ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :height 1.2 :underline nil)) (((class color) (min-colors 255)) (:foreground "#738FD7" :height 1.2 :underline nil)) (t (:foreground "#738FD7" :height 1.2 :underline nil))))
 '(treemacs-directory-face ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(treemacs-git-modified-face ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(treemacs-fringe-indicator-face ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(treemacs-tags-face ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(treemacs-on-success-pulse-face ((((class color) (min-colors 16777215)) (:background "#39855f" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#39855f" :foreground "#222225")) (t (:background "#39855f" :foreground "#222225"))))
 '(treemacs-on-failure-pulse-face ((((class color) (min-colors 16777215)) (:background "#e84c58" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#e84c58" :foreground "#222225")) (t (:background "#e84c58" :foreground "#222225"))))
 '(treemacs-term-node-face ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(neo-root-dir-face ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :underline nil)) (((class color) (min-colors 255)) (:foreground "#738FD7" :underline nil)) (t (:foreground "#738FD7" :underline nil))))
 '(neo-dir-link-face ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(neo-file-link-face ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(neo-expand-btn-face ((((class color) (min-colors 16777215)) (:foreground "#0ed49b")) (((class color) (min-colors 255)) (:foreground "#0ed49b")) (t (:foreground "#0ed49b"))))
 '(neo-vc-added-face ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(neo-vc-edited-face ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(neo-vc-removed-face ((((class color) (min-colors 16777215)) (:foreground "#e84c58" :strike-through t)) (((class color) (min-colors 255)) (:foreground "#e84c58" :strike-through t)) (t (:foreground "#e84c58" :strike-through t))))
 '(neo-vc-conflict-face ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(neo-vc-missing-face ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(neo-vc-ignored-face ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(git-gutter:unchanged ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground nil)) (((class color) (min-colors 255)) (:background "#222225" :foreground nil)) (t (:background "#222225" :foreground nil))))
 '(git-gutter:added ((((class color) (min-colors 16777215)) (:background "#35BF88" :foreground "#35BF88")) (((class color) (min-colors 255)) (:background "#35BF88" :foreground "#35BF88")) (t (:background "#35BF88" :foreground "#35BF88"))))
 '(git-gutter:modified ((((class color) (min-colors 16777215)) (:background "#dbac66" :foreground "#dbac66")) (((class color) (min-colors 255)) (:background "#dbac66" :foreground "#dbac66")) (t (:background "#dbac66" :foreground "#dbac66"))))
 '(git-gutter:deleted ((((class color) (min-colors 16777215)) (:background "#e84c58" :foreground "#e84c58")) (((class color) (min-colors 255)) (:background "#e84c58" :foreground "#e84c58")) (t (:background "#e84c58" :foreground "#e84c58"))))
 '(diff-hl-insert ((((class color) (min-colors 16777215)) (:background "#35BF88")) (((class color) (min-colors 255)) (:background "#35BF88")) (t (:background "#35BF88"))))
 '(diff-hl-change ((((class color) (min-colors 16777215)) (:background "#dbac66")) (((class color) (min-colors 255)) (:background "#dbac66")) (t (:background "#dbac66"))))
 '(diff-hl-delete ((((class color) (min-colors 16777215)) (:background "#e84c58")) (((class color) (min-colors 255)) (:background "#e84c58")) (t (:background "#e84c58"))))
 '(diff-hl-margin-insert ((((class color) (min-colors 16777215)) (:background "#35BF88" :foreground "#14141e" :slant normal)) (((class color) (min-colors 255)) (:background "#35BF88" :foreground "#222225" :slant normal)) (t (:background "#35BF88" :foreground "#222225" :slant normal))))
 '(diff-hl-margin-change ((((class color) (min-colors 16777215)) (:background "#dbac66" :foreground "#14141e" :slant normal)) (((class color) (min-colors 255)) (:background "#dbac66" :foreground "#222225" :slant normal)) (t (:background "#dbac66" :foreground "#222225" :slant normal))))
 '(diff-hl-margin-delete ((((class color) (min-colors 16777215)) (:background "#e84c58" :foreground "#14141e" :slant normal)) (((class color) (min-colors 255)) (:background "#e84c58" :foreground "#222225" :slant normal)) (t (:background "#e84c58" :foreground "#222225" :slant normal))))
 '(popup-face ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#d4d4d6" :bold t)) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#d4d4d6" :bold t)) (t (:background "#2B2B2F" :foreground "#d4d4d6" :bold t))))
 '(popup-menu-selection-face ((((class color) (min-colors 16777215)) (:background "#32324a" :foreground "#eed891" :bold t)) (((class color) (min-colors 255)) (:background "#353b3c" :foreground "#eed891" :bold t)) (t (:background "#353b3c" :foreground "#eed891" :bold t))))
 '(popup-tip-face ((((class color) (min-colors 16777215)) (:background "#32324a" :foreground "#e6e6e8" :bold t)) (((class color) (min-colors 255)) (:background "#353b3c" :foreground "#e6e6e8" :bold t)) (t (:background "#353b3c" :foreground "#e6e6e8" :bold t))))
 '(term ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#e6e6e8")) (t (:background "#222225" :foreground "#e6e6e8"))))
 '(term-color-black ((((class color) (min-colors 16777215)) (:foreground "#14141e")) (((class color) (min-colors 255)) (:foreground "#222225")) (t (:foreground "#222225"))))
 '(term-color-red ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(term-color-green ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(term-color-yellow ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(term-color-blue ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(term-color-magenta ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(term-color-cyan ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(term-color-white ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(term-underline ((((class color) (min-colors 16777215)) (:inherit underline)) (((class color) (min-colors 255)) (:inherit underline)) (t (:inherit underline))))
 '(eshell-prompt ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :bold t)) (((class color) (min-colors 255)) (:foreground "#738FD7" :bold t)) (t (:foreground "#738FD7" :bold t))))
 '(eshell-ls-directory ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :bold t)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :bold t)) (t (:foreground "#4ca6e8" :bold t))))
 '(eshell-ls-symlink ((((class color) (min-colors 16777215)) (:foreground "#6bd9db" :bold t)) (((class color) (min-colors 255)) (:foreground "#6bd9db" :bold t)) (t (:foreground "#6bd9db" :bold t))))
 '(eshell-ls-executable ((((class color) (min-colors 16777215)) (:foreground "#35BF88" :bold t)) (((class color) (min-colors 255)) (:foreground "#35BF88" :bold t)) (t (:foreground "#35BF88" :bold t))))
 '(eshell-ls-archive ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(eshell-ls-backup ((((class color) (min-colors 16777215)) (:foreground "#c79af4")) (((class color) (min-colors 255)) (:foreground "#c79af4")) (t (:foreground "#c79af4"))))
 '(eshell-ls-clutter ((((class color) (min-colors 16777215)) (:foreground "#5D8272")) (((class color) (min-colors 255)) (:foreground "#5D8272")) (t (:foreground "#5D8272"))))
 '(eshell-ls-missing ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#e84c58")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#e84c58")) (t (:background "#303035" :foreground "#e84c58"))))
 '(eshell-ls-product ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(eshell-ls-readonly ((((class color) (min-colors 16777215)) (:foreground "#ee7042")) (((class color) (min-colors 255)) (:foreground "#ee7042")) (t (:foreground "#ee7042"))))
 '(eshell-ls-special ((((class color) (min-colors 16777215)) (:foreground "#526AF3")) (((class color) (min-colors 255)) (:foreground "#526AF3")) (t (:foreground "#526AF3"))))
 '(eshell-ls-unreadable ((((class color) (min-colors 16777215)) (:inherit shadow)) (((class color) (min-colors 255)) (:inherit shadow)) (t (:inherit shadow))))
 '(whitespace-empty ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(whitespace-line ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#eed891")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#eed891")) (t (:background "#222225" :foreground "#eed891"))))
 '(whitespace-indentation ((((class color) (min-colors 16777215)) (:background "#545c5e" :foreground "#545c5e")) (((class color) (min-colors 255)) (:background "#545c5e" :foreground "#545c5e")) (t (:background "#545c5e" :foreground "#545c5e"))))
 '(whitespace-tab ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#545c5e")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#545c5e")) (t (:background "#2B2B2F" :foreground "#545c5e"))))
 '(whitespace-space ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#545c5e")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#545c5e")) (t (:background "#2B2B2F" :foreground "#545c5e"))))
 '(whitespace-newline ((((class color) (min-colors 16777215)) (:inherit whitespace-space)) (((class color) (min-colors 255)) (:inherit whitespace-space)) (t (:inherit whitespace-space))))
 '(whitespace-space-before-tab ((((class color) (min-colors 16777215)) (:background "#dbac66" :foreground "#1d1d2b")) (((class color) (min-colors 255)) (:background "#dbac66" :foreground "#2B2B2F")) (t (:background "#dbac66" :foreground "#2B2B2F"))))
 '(whitespace-space-after-tab ((((class color) (min-colors 16777215)) (:background "#dbac66" :foreground "#1d1d2b")) (((class color) (min-colors 255)) (:background "#dbac66" :foreground "#2B2B2F")) (t (:background "#dbac66" :foreground "#2B2B2F"))))
 '(whitespace-trailing ((((class color) (min-colors 16777215)) (:inherit trailing-whitespace :foreground "#1d1d2b")) (((class color) (min-colors 255)) (:inherit trailing-whitespace :foreground "#2B2B2F")) (t (:inherit trailing-whitespace :foreground "#2B2B2F"))))
 '(whitespace-big-indent ((((class color) (min-colors 16777215)) (:background "#c93237" :foreground "#1d1d2b")) (((class color) (min-colors 255)) (:background "#c93237" :foreground "#2B2B2F")) (t (:background "#c93237" :foreground "#2B2B2F"))))
 '(org-todo ((((class color) (min-colors 16777215)) (:foreground "#d24b83" :bold t)) (((class color) (min-colors 255)) (:foreground "#d24b83" :bold t)) (t (:foreground "#d24b83" :bold t))))
 '(org-done ((t (:foreground "#65E6A7" :weight bold))))
 '(org-headline-done ((t (:foreground "#60696b" :weight normal))))
 '(org-ellipsis ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :underline nil)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :underline nil)) (t (:foreground "#4ca6e8" :underline nil))))
 '(org-date ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :underline t)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :underline t)) (t (:foreground "#4ca6e8" :underline t))))
 '(org-date-selected ((((class color) (min-colors 16777215)) (:background "#32324a" :foreground "#0ed49b" :weight bold)) (((class color) (min-colors 255)) (:background "#353b3c" :foreground "#0ed49b" :weight bold)) (t (:background "#353b3c" :foreground "#0ed49b" :weight bold))))
 '(org-link ((((class color) (min-colors 16777215)) (:inherit link)) (((class color) (min-colors 255)) (:inherit link)) (t (:inherit link))))
 '(org-code ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(org-verbatim ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(org-hide ((((class color) (min-colors 16777215)) (:foreground "#14141e")) (((class color) (min-colors 255)) (:foreground "#222225")) (t (:foreground "#222225"))))
 '(org-drawer ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(org-special-keyword ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(org-table ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#c9c9cd")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#c9c9cd")) (t (:background "#2B2B2F" :foreground "#c9c9cd"))))
 '(org-formula ((((class color) (min-colors 16777215)) (:background nil :foreground "#d24b83")) (((class color) (min-colors 255)) (:background nil :foreground "#d24b83")) (t (:background nil :foreground "#d24b83"))))
 '(org-warning ((((class color) (min-colors 16777215)) (:foreground "#dbac66" :underline t)) (((class color) (min-colors 255)) (:foreground "#dbac66" :underline t)) (t (:foreground "#dbac66" :underline t))))
 '(org-tag ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(org-checkbox ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(org-document-info-keyword ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(org-meta-line ((((class color) (min-colors 16777215)) (:inherit org-document-info-keyword)) (((class color) (min-colors 255)) (:inherit org-document-info-keyword)) (t (:inherit org-document-info-keyword))))
 '(org-block ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#d4d4d6")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#d4d4d6")) (t (:background "#2B2B2F" :foreground "#d4d4d6"))))
 '(org-block-begin-line ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#545c5e" :height 0.9)) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#545c5e" :height 0.9)) (t (:background "#2B2B2F" :foreground "#545c5e" :height 0.9))))
 '(org-block-end-line ((((class color) (min-colors 16777215)) (:inherit org-block-begin-line)) (((class color) (min-colors 255)) (:inherit org-block-begin-line)) (t (:inherit org-block-begin-line))))
 '(org-list-dt ((((class color) (min-colors 16777215)) (:inherit org-checkbox)) (((class color) (min-colors 255)) (:inherit org-checkbox)) (t (:inherit org-checkbox))))
 '(org-document-title ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(org-document-info ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(org-footnote ((((class color) (min-colors 16777215)) (:foreground "#bebec4" :underline t)) (((class color) (min-colors 255)) (:foreground "#bebec4" :underline t)) (t (:foreground "#bebec4" :underline t))))
 '(org-quote ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#d4d4d6" :italic t)) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#d4d4d6" :italic t)) (t (:background "#2B2B2F" :foreground "#d4d4d6" :italic t))))
 '(org-verse ((((class color) (min-colors 16777215)) (:foreground "#c9c9cd" :italic t)) (((class color) (min-colors 255)) (:foreground "#c9c9cd" :italic t)) (t (:foreground "#c9c9cd" :italic t))))
 '(org-level-1 ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :bold t :height 1.1)) (((class color) (min-colors 255)) (:foreground "#738FD7" :bold t :height 1.1)) (t (:foreground "#738FD7" :bold t :height 1.1))))
 '(org-level-2 ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(org-level-3 ((((class color) (min-colors 16777215)) (:foreground "#eed891" :bold nil)) (((class color) (min-colors 255)) (:foreground "#eed891" :bold nil)) (t (:foreground "#eed891" :bold nil))))
 '(org-level-4 ((((class color) (min-colors 16777215)) (:foreground "#cea2ca" :bold nil)) (((class color) (min-colors 255)) (:foreground "#cea2ca" :bold nil)) (t (:foreground "#cea2ca" :bold nil))))
 '(org-agenda-dimmed-todo-face ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(org-agenda-date ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(org-agenda-date-today ((((class color) (min-colors 16777215)) (:foreground "#9587DD" :bold t)) (((class color) (min-colors 255)) (:foreground "#9587DD" :bold t)) (t (:foreground "#9587DD" :bold t))))
 '(org-agenda-date-weekend ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(org-agenda-done ((((class color) (min-colors 16777215)) (:foreground "#65E6A7")) (((class color) (min-colors 255)) (:foreground "#65E6A7")) (t (:foreground "#65E6A7"))))
 '(org-agenda-structure ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(org-agenda-clocking ((((class color) (min-colors 16777215)) (:background "#545c5e" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#545c5e" :foreground "#e6e6e8")) (t (:background "#545c5e" :foreground "#e6e6e8"))))
 '(org-scheduled ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(org-scheduled-today ((((class color) (min-colors 16777215)) (:foreground "#6bd9db" :bold t)) (((class color) (min-colors 255)) (:foreground "#6bd9db" :bold t)) (t (:foreground "#6bd9db" :bold t))))
 '(org-sexp-date ((((class color) (min-colors 16777215)) (:foreground "#bebec4")) (((class color) (min-colors 255)) (:foreground "#bebec4")) (t (:foreground "#bebec4"))))
 '(org-time-grid ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(org-habit-clear-face ((((class color) (min-colors 16777215)) (:background "#4ca6e8")) (((class color) (min-colors 255)) (:background "#4ca6e8")) (t (:background "#4ca6e8"))))
 '(org-habit-clear-future-face ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(org-habit-ready-face ((((class color) (min-colors 16777215)) (:background "#35BF88")) (((class color) (min-colors 255)) (:background "#35BF88")) (t (:background "#35BF88"))))
 '(org-habit-ready-future-face ((((class color) (min-colors 16777215)) (:background "#39855f")) (((class color) (min-colors 255)) (:background "#39855f")) (t (:background "#39855f"))))
 '(org-habit-alert-face ((((class color) (min-colors 16777215)) (:background "#dbac66")) (((class color) (min-colors 255)) (:background "#dbac66")) (t (:background "#dbac66"))))
 '(org-habit-alert-future-face ((((class color) (min-colors 16777215)) (:background "#cd9575")) (((class color) (min-colors 255)) (:background "#d7af87")) (t (:background "#d7af87"))))
 '(org-habit-overdue-face ((((class color) (min-colors 16777215)) (:background "#e84c58")) (((class color) (min-colors 255)) (:background "#e84c58")) (t (:background "#e84c58"))))
 '(org-habit-overdue-future-face ((((class color) (min-colors 16777215)) (:background "#a0586c")) (((class color) (min-colors 255)) (:background "#a0586c")) (t (:background "#a0586c"))))
 '(emmet-preview-input ((((class color) (min-colors 16777215)) (:foreground nil :background nil)) (((class color) (min-colors 255)) (:foreground nil :background nil)) (t (:foreground nil :background nil))))
 '(emmet-preview-output ((((class color) (min-colors 16777215)) (:foreground nil :background nil)) (((class color) (min-colors 255)) (:foreground nil :background nil)) (t (:foreground nil :background nil))))
 '(flx-highlight-face ((((class color) (min-colors 16777215)) (:foreground "#0ed49b" :underline t)) (((class color) (min-colors 255)) (:foreground "#0ed49b" :underline t)) (t (:foreground "#0ed49b" :underline t))))
 '(sp-pair-overlay-face ((((class color) (min-colors 16777215)) (:foreground nil)) (((class color) (min-colors 255)) (:foreground nil)) (t (:foreground nil))))
 '(css-selector ((((class color) (min-colors 16777215)) (:inherit font-lock-builtin-face)) (((class color) (min-colors 255)) (:inherit font-lock-builtin-face)) (t (:inherit font-lock-builtin-face))))
 '(web-mode-css-selector-face ((((class color) (min-colors 16777215)) (:inherit font-lock-builtin-face)) (((class color) (min-colors 255)) (:inherit font-lock-builtin-face)) (t (:inherit font-lock-builtin-face))))
 '(web-mode-type-face ((((class color) (min-colors 16777215)) (:inherit font-lock-type-face)) (((class color) (min-colors 255)) (:inherit font-lock-type-face)) (t (:inherit font-lock-type-face))))
 '(web-mode-html-tag-face ((((class color) (min-colors 16777215)) (:inherit font-lock-keyword-face)) (((class color) (min-colors 255)) (:inherit font-lock-keyword-face)) (t (:inherit font-lock-keyword-face))))
 '(web-mode-html-tag-bracket-face ((((class color) (min-colors 16777215)) (:inherit web-mode-html-tag-face)) (((class color) (min-colors 255)) (:inherit web-mode-html-tag-face)) (t (:inherit web-mode-html-tag-face))))
 '(web-mode-html-attr-name-face ((((class color) (min-colors 16777215)) (:inherit font-lock-function-name-face)) (((class color) (min-colors 255)) (:inherit font-lock-function-name-face)) (t (:inherit font-lock-function-name-face))))
 '(web-mode-html-attr-value-face ((((class color) (min-colors 16777215)) (:inherit font-lock-string-face)) (((class color) (min-colors 255)) (:inherit font-lock-string-face)) (t (:inherit font-lock-string-face))))
 '(web-mode-builtin-face ((((class color) (min-colors 16777215)) (:inherit font-lock-builtin-face)) (((class color) (min-colors 255)) (:inherit font-lock-builtin-face)) (t (:inherit font-lock-builtin-face))))
 '(web-mode-keyword-face ((((class color) (min-colors 16777215)) (:inherit font-lock-builtin-face)) (((class color) (min-colors 255)) (:inherit font-lock-builtin-face)) (t (:inherit font-lock-builtin-face))))
 '(web-mode-constant-face ((((class color) (min-colors 16777215)) (:inherit font-lock-constant-face)) (((class color) (min-colors 255)) (:inherit font-lock-constant-face)) (t (:inherit font-lock-constant-face))))
 '(web-mode-comment-face ((((class color) (min-colors 16777215)) (:inherit font-lock-comment-face)) (((class color) (min-colors 255)) (:inherit font-lock-comment-face)) (t (:inherit font-lock-comment-face))))
 '(web-mode-doctype-face ((((class color) (min-colors 16777215)) (:inherit font-lock-preprocessor-face)) (((class color) (min-colors 255)) (:inherit font-lock-preprocessor-face)) (t (:inherit font-lock-preprocessor-face))))
 '(web-mode-function-name-face ((((class color) (min-colors 16777215)) (:inherit font-lock-function-name-face)) (((class color) (min-colors 255)) (:inherit font-lock-function-name-face)) (t (:inherit font-lock-function-name-face))))
 '(web-mode-string-face ((((class color) (min-colors 16777215)) (:inherit font-lock-string-face)) (((class color) (min-colors 255)) (:inherit font-lock-string-face)) (t (:inherit font-lock-string-face))))
 '(web-mode-warning-face ((((class color) (min-colors 16777215)) (:inherit font-lock-warning-face)) (((class color) (min-colors 255)) (:inherit font-lock-warning-face)) (t (:inherit font-lock-warning-face))))
 '(nim-font-lock-export-face ((((class color) (min-colors 16777215)) (:inherit font-lock-function-name-face :italic nil)) (((class color) (min-colors 255)) (:inherit font-lock-function-name-face :italic nil)) (t (:inherit font-lock-function-name-face :italic nil))))
 '(evil-ex-info ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(evil-ex-substitute-matches ((((class color) (min-colors 16777215)) (:background nil :foreground "#e84c58" :underline t)) (((class color) (min-colors 255)) (:background nil :foreground "#e84c58" :underline t)) (t (:background nil :foreground "#e84c58" :underline t))))
 '(evil-ex-substitute-replacement ((((class color) (min-colors 16777215)) (:background nil :foreground "#35BF88")) (((class color) (min-colors 255)) (:background nil :foreground "#35BF88")) (t (:background nil :foreground "#35BF88"))))
 '(evil-ex-lazy-highlight ((((class color) (min-colors 16777215)) (:inherit lazy-highlight)) (((class color) (min-colors 255)) (:inherit lazy-highlight)) (t (:inherit lazy-highlight))))
 '(evil-goggles-default-face ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(evil-snipe-first-match-face ((((class color) (min-colors 16777215)) (:foreground "#ee7042")) (((class color) (min-colors 255)) (:foreground "#ee7042")) (t (:foreground "#ee7042"))))
 '(evil-snipe-matches-face ((((class color) (min-colors 16777215)) (:foreground "#0D9C94")) (((class color) (min-colors 255)) (:foreground "#0D9C94")) (t (:foreground "#0D9C94"))))
 '(beacon-fallback-background ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(solaire-default-face ((((class color) (min-colors 16777215)) (:inherit default :background "#111119")) (((class color) (min-colors 255)) (:inherit default :background "#18181B")) (t (:inherit default :background "#18181B"))))
 '(solaire-minibuffer-face ((((class color) (min-colors 16777215)) (:inherit solaire-default-face)) (((class color) (min-colors 255)) (:inherit solaire-default-face)) (t (:inherit solaire-default-face))))
 '(solaire-hl-line-face ((((class color) (min-colors 16777215)) (:inherit hl-line :background "#28283a")) (((class color) (min-colors 255)) (:inherit hl-line :background "#303035")) (t (:inherit hl-line :background "#303035"))))
 '(solaire-org-hide-face ((((class color) (min-colors 16777215)) (:inherit org-hide)) (((class color) (min-colors 255)) (:inherit org-hide)) (t (:inherit org-hide))))
 '(tuareg-font-double-colon-face ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(tuareg-font-lock-governing-face ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(tuareg-font-lock-operator-face ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(tuareg-font-lock-error-face ((((class color) (min-colors 16777215)) (:inherit error)) (((class color) (min-colors 255)) (:inherit error)) (t (:inherit error))))
 '(tuareg-font-lock-multistage-face ((((class color) (min-colors 16777215)) (:inherit font-lock-preprocessor-face)) (((class color) (min-colors 255)) (:inherit font-lock-preprocessor-face)) (t (:inherit font-lock-preprocessor-face))))
 '(tuareg-font-lock-interactive-error-face ((((class color) (min-colors 16777215)) (:inherit error)) (((class color) (min-colors 255)) (:inherit error)) (t (:inherit error))))
 '(tuareg-font-lock-interactive-output-face ((((class color) (min-colors 16777215)) (:inherit default)) (((class color) (min-colors 255)) (:inherit default)) (t (:inherit default))))
 '(markdown-bold-face ((((class color) (min-colors 16777215)) (:inherit bold)) (((class color) (min-colors 255)) (:inherit bold)) (t (:inherit bold))))
 '(markdown-italic-face ((((class color) (min-colors 16777215)) (:inherit italic)) (((class color) (min-colors 255)) (:inherit italic)) (t (:inherit italic))))
 '(markdown-header-face ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8" :bold bold)) (((class color) (min-colors 255)) (:foreground "#4ca6e8" :bold bold)) (t (:foreground "#4ca6e8" :bold bold))))
 '(markdown-header-delimiter-face ((((class color) (min-colors 16777215)) (:inherit markdown-header-face)) (((class color) (min-colors 255)) (:inherit markdown-header-face)) (t (:inherit markdown-header-face))))
 '(markdown-metadata-key-face ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(markdown-metadata-value-face ((((class color) (min-colors 16777215)) (:foreground "#5D8272")) (((class color) (min-colors 255)) (:foreground "#5D8272")) (t (:foreground "#5D8272"))))
 '(markdown-markup-face ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(markdown-list-face ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(markdown-pre-face ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(markdown-code-face ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(markdown-inline-code-face ((((class color) (min-colors 16777215)) (:inherit (markdown-code-face markdown-pre-face))) (((class color) (min-colors 255)) (:inherit (markdown-code-face markdown-pre-face))) (t (:inherit (markdown-code-face markdown-pre-face)))))
 '(markdown-link-face ((((class color) (min-colors 16777215)) (:inherit link)) (((class color) (min-colors 255)) (:inherit link)) (t (:inherit link))))
 '(markdown-url-face ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(markdown-blockquote-face ((((class color) (min-colors 16777215)) (:foreground "#bebec4")) (((class color) (min-colors 255)) (:foreground "#bebec4")) (t (:foreground "#bebec4"))))
 '(markdown-reference-face ((((class color) (min-colors 16777215)) (:foreground "#5D8272")) (((class color) (min-colors 255)) (:foreground "#5D8272")) (t (:foreground "#5D8272"))))
 '(markdown-language-keyword-face ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(markdown-html-tag-name-face ((((class color) (min-colors 16777215)) (:inherit font-lock-keyword-face)) (((class color) (min-colors 255)) (:inherit font-lock-keyword-face)) (t (:inherit font-lock-keyword-face))))
 '(markdown-html-tag-delimiter-face ((((class color) (min-colors 16777215)) (:inherit web-mode-html-tag-face)) (((class color) (min-colors 255)) (:inherit web-mode-html-tag-face)) (t (:inherit web-mode-html-tag-face))))
 '(markdown-html-entity-face ((((class color) (min-colors 16777215)) (:inherit font-lock-variable-name-face)) (((class color) (min-colors 255)) (:inherit font-lock-variable-name-face)) (t (:inherit font-lock-variable-name-face))))
 '(markdown-html-attr-name-face ((((class color) (min-colors 16777215)) (:inherit font-lock-function-name-face)) (((class color) (min-colors 255)) (:inherit font-lock-function-name-face)) (t (:inherit font-lock-function-name-face))))
 '(markdown-html-attr-value-face ((((class color) (min-colors 16777215)) (:inherit font-lock-string-face)) (((class color) (min-colors 255)) (:inherit font-lock-string-face)) (t (:inherit font-lock-string-face))))
 '(sh-escaped-newline ((((class color) (min-colors 16777215)) (:inherit font-lock-string-face)) (((class color) (min-colors 255)) (:inherit font-lock-string-face)) (t (:inherit font-lock-string-face))))
 '(sh-heredoc ((((class color) (min-colors 16777215)) (:foreground "#5D8272")) (((class color) (min-colors 255)) (:foreground "#5D8272")) (t (:foreground "#5D8272"))))
 '(sh-quoted-exec ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(helm-M-x-key ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(helm-action ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8" :underline t)) (((class color) (min-colors 255)) (:foreground "#e6e6e8" :underline t)) (t (:foreground "#e6e6e8" :underline t))))
 '(helm-header ((((class color) (min-colors 16777215)) (:inherit header-line)) (((class color) (min-colors 255)) (:inherit header-line)) (t (:inherit header-line))))
 '(helm-header-line-left-margin ((((class color) (min-colors 16777215)) (:inherit header-line)) (((class color) (min-colors 255)) (:inherit header-line)) (t (:inherit header-line))))
 '(helm-helper ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(helm-source-header ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#7CF083" :underline nil :bold t)) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#7CF083" :underline nil :bold t)) (t (:background "#2B2B2F" :foreground "#7CF083" :underline nil :bold t))))
 '(helm-match ((((class color) (min-colors 16777215)) (:foreground "#ee7042" :bold t)) (((class color) (min-colors 255)) (:foreground "#ee7042" :bold t)) (t (:foreground "#ee7042" :bold t))))
 '(helm-selection ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#0ed49b" :bold t)) (((class color) (min-colors 255)) (:background "#303035" :foreground "#0ed49b" :bold t)) (t (:background "#303035" :foreground "#0ed49b" :bold t))))
 '(helm-selection-line ((((class color) (min-colors 16777215)) (:inherit helm-selection)) (((class color) (min-colors 255)) (:inherit helm-selection)) (t (:inherit helm-selection))))
 '(helm-visible-mark ((((class color) (min-colors 16777215)) (:background "#39855f" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#39855f" :foreground "#222225")) (t (:background "#39855f" :foreground "#222225"))))
 '(helm-candidate-number ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(helm-separator ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(helm-bookmark-addressbook ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(helm-bookmark-directory ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(helm-bookmark-file ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(helm-bookmark-gnus ((((class color) (min-colors 16777215)) (:foreground "#0D9C94")) (((class color) (min-colors 255)) (:foreground "#0D9C94")) (t (:foreground "#0D9C94"))))
 '(helm-bookmark-info ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(helm-bookmark-man ((((class color) (min-colors 16777215)) (:foreground "#5D8272")) (((class color) (min-colors 255)) (:foreground "#5D8272")) (t (:foreground "#5D8272"))))
 '(helm-bookmark-w3m ((((class color) (min-colors 16777215)) (:foreground "#ee7042")) (((class color) (min-colors 255)) (:foreground "#ee7042")) (t (:foreground "#ee7042"))))
 '(helm-buffer-process ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(helm-buffer-saved-out ((((class color) (min-colors 16777215)) (:background "#cd9575" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#d7af87" :foreground "#222225")) (t (:background "#d7af87" :foreground "#222225"))))
 '(helm-buffer-size ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(helm-buffer-directory ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(helm-buffer-archive ((((class color) (min-colors 16777215)) (:foreground "#cea2ca")) (((class color) (min-colors 255)) (:foreground "#cea2ca")) (t (:foreground "#cea2ca"))))
 '(helm-buffer-not-saved ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(helm-buffer-modified ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(helm-etags-file ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(helm-ff-directory ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :bold t)) (((class color) (min-colors 255)) (:foreground "#738FD7" :bold t)) (t (:foreground "#738FD7" :bold t))))
 '(helm-ff-dotted-directory ((((class color) (min-colors 16777215)) (:inherit helm-ff-directory)) (((class color) (min-colors 255)) (:inherit helm-ff-directory)) (t (:inherit helm-ff-directory))))
 '(helm-ff-symlink ((((class color) (min-colors 16777215)) (:foreground "#6bd9db" :bold t)) (((class color) (min-colors 255)) (:foreground "#6bd9db" :bold t)) (t (:foreground "#6bd9db" :bold t))))
 '(helm-ff-dotted-symlink-directory ((((class color) (min-colors 16777215)) (:inherit helm-ff-symlink)) (((class color) (min-colors 255)) (:inherit helm-ff-symlink)) (t (:inherit helm-ff-symlink))))
 '(helm-ff-file ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8" :weight normal)) (((class color) (min-colors 255)) (:foreground "#e6e6e8" :weight normal)) (t (:foreground "#e6e6e8" :weight normal))))
 '(helm-ff-executable ((((class color) (min-colors 16777215)) (:foreground "#eed891" :weight normal)) (((class color) (min-colors 255)) (:foreground "#eed891" :weight normal)) (t (:foreground "#eed891" :weight normal))))
 '(helm-ff-invalid-symlink ((((class color) (min-colors 16777215)) (:inherit error)) (((class color) (min-colors 255)) (:inherit error)) (t (:inherit error))))
 '(helm-ff-prefix ((((class color) (min-colors 16777215)) (:foreground "#738FD7")) (((class color) (min-colors 255)) (:foreground "#738FD7")) (t (:foreground "#738FD7"))))
 '(helm-ff-denied ((((class color) (min-colors 16777215)) (:inherit error :underline t)) (((class color) (min-colors 255)) (:inherit error :underline t)) (t (:inherit error :underline t))))
 '(helm-grep-cmd-line ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(helm-grep-file ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(helm-grep-finish ((((class color) (min-colors 16777215)) (:foreground "#65E6A7")) (((class color) (min-colors 255)) (:foreground "#65E6A7")) (t (:foreground "#65E6A7"))))
 '(helm-grep-lineno ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(helm-grep-match ((((class color) (min-colors 16777215)) (:inherit helm-match)) (((class color) (min-colors 255)) (:inherit helm-match)) (t (:inherit helm-match))))
 '(helm-grep-running ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(helm-locate-finish ((((class color) (min-colors 16777215)) (:foreground "#65E6A7")) (((class color) (min-colors 255)) (:foreground "#65E6A7")) (t (:foreground "#65E6A7"))))
 '(helm-moccur-buffer ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(helm-resume-need-update ((((class color) (min-colors 16777215)) (:background "#e84c58" :foreground nil)) (((class color) (min-colors 255)) (:background "#e84c58" :foreground nil)) (t (:background "#e84c58" :foreground nil))))
 '(helm-lisp-completion-info ((((class color) (min-colors 16777215)) (:foreground "#5D8272")) (((class color) (min-colors 255)) (:foreground "#5D8272")) (t (:foreground "#5D8272"))))
 '(helm-lisp-show-completion ((((class color) (min-colors 16777215)) (:background "#2E403B" :foreground "#bebec4" :underline t)) (((class color) (min-colors 255)) (:background "#2E403B" :foreground "#bebec4" :underline t)) (t (:background "#2E403B" :foreground "#bebec4" :underline t))))
 '(helm-prefarg ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(helm-mode-prefix ((((class color) (min-colors 16777215)) (:background "#e84c58" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#e84c58" :foreground "#222225")) (t (:background "#e84c58" :foreground "#222225"))))
 '(helm-time-zone-current ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(helm-time-zone-home ((((class color) (min-colors 16777215)) (:foreground "#d24b83")) (((class color) (min-colors 255)) (:foreground "#d24b83")) (t (:foreground "#d24b83"))))
 '(helm-source-go-package-godoc-description ((((class color) (min-colors 16777215)) (:foreground "#7CF083")) (((class color) (min-colors 255)) (:foreground "#7CF083")) (t (:foreground "#7CF083"))))
 '(helm-swoop-line-number-face ((((class color) (min-colors 16777215)) (:background nil :foreground "#545c5e")) (((class color) (min-colors 255)) (:background nil :foreground "#545c5e")) (t (:background nil :foreground "#545c5e"))))
 '(helm-swoop-target-line-face ((((class color) (min-colors 16777215)) (:inherit isearch)) (((class color) (min-colors 255)) (:inherit isearch)) (t (:inherit isearch))))
 '(helm-swoop-target-line-block-face ((((class color) (min-colors 16777215)) (:inherit isearch)) (((class color) (min-colors 255)) (:inherit isearch)) (t (:inherit isearch))))
 '(helm-swoop-target-word-face ((((class color) (min-colors 16777215)) (:background "#eed891" :foreground "#14141e" :bold t)) (((class color) (min-colors 255)) (:background "#eed891" :foreground "#222225" :bold t)) (t (:background "#eed891" :foreground "#222225" :bold t))))
 '(explain-pause-top-slow-heading ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(explain-pause-top-profile-heading ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(explain-pause-top-slow ((((class color) (min-colors 16777215)) (:foreground "#e84c58")) (((class color) (min-colors 255)) (:foreground "#e84c58")) (t (:foreground "#e84c58"))))
 '(explain-pause-top-changed ((((class color) (min-colors 16777215)) (:foreground "#35BF88")) (((class color) (min-colors 255)) (:foreground "#35BF88")) (t (:foreground "#35BF88"))))
 '(explain-pause-top-active-column-header ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#0ed49b")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#0ed49b")) (t (:background "#2B2B2F" :foreground "#0ed49b"))))
 '(wgrep-face ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#dbac66")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#dbac66")) (t (:background "#2B2B2F" :foreground "#dbac66"))))
 '(wgrep-delete-face ((((class color) (min-colors 16777215)) (:background "#a0586c" :foreground "#1d1d2b")) (((class color) (min-colors 255)) (:background "#a0586c" :foreground "#2B2B2F")) (t (:background "#a0586c" :foreground "#2B2B2F"))))
 '(wgrep-done-face ((((class color) (min-colors 16777215)) (:foreground "#65E6A7")) (((class color) (min-colors 255)) (:foreground "#65E6A7")) (t (:foreground "#65E6A7"))))
 '(wgrep-file-face ((((class color) (min-colors 16777215)) (:foreground "#545c5e")) (((class color) (min-colors 255)) (:foreground "#545c5e")) (t (:foreground "#545c5e"))))
 '(wgrep-reject-face ((((class color) (min-colors 16777215)) (:inherit error)) (((class color) (min-colors 255)) (:inherit error)) (t (:inherit error))))
 '(avy-background-face ((((class color) (min-colors 16777215)) (:inherit font-lock-comment-face)) (((class color) (min-colors 255)) (:inherit font-lock-comment-face)) (t (:inherit font-lock-comment-face))))
 '(avy-lead-face ((((class color) (min-colors 16777215)) (:background "#39855f" :foreground "#e6e6e8" :weight bold)) (((class color) (min-colors 255)) (:background "#39855f" :foreground "#e6e6e8" :weight bold)) (t (:background "#39855f" :foreground "#e6e6e8" :weight bold))))
 '(avy-lead-face-0 ((((class color) (min-colors 16777215)) (:background "#832729" :foreground "#e6e6e8" :weight bold)) (((class color) (min-colors 255)) (:background "#832729" :foreground "#e6e6e8" :weight bold)) (t (:background "#832729" :foreground "#e6e6e8" :weight bold))))
 '(avy-lead-face-1 ((((class color) (min-colors 16777215)) (:background "#734073" :foreground "#e6e6e8" :weight bold)) (((class color) (min-colors 255)) (:background "#734073" :foreground "#e6e6e8" :weight bold)) (t (:background "#734073" :foreground "#e6e6e8" :weight bold))))
 '(avy-lead-face-2 ((((class color) (min-colors 16777215)) (:background "#1c5f87" :foreground "#e6e6e8" :weight bold)) (((class color) (min-colors 255)) (:background "#1c5f87" :foreground "#e6e6e8" :weight bold)) (t (:background "#1c5f87" :foreground "#e6e6e8" :weight bold))))
 '(aw-leading-char-face ((((class color) (min-colors 16777215)) (:background nil :foreground "#0ed49b" :bold t :height 1.4)) (((class color) (min-colors 255)) (:background nil :foreground "#0ed49b" :bold t :height 1.4)) (t (:background nil :foreground "#0ed49b" :bold t :height 1.4))))
 '(aw-background-face ((((class color) (min-colors 16777215)) (:foreground "#545c5e" :bold t)) (((class color) (min-colors 255)) (:foreground "#545c5e" :bold t)) (t (:foreground "#545c5e" :bold t))))
 '(aw-key-face ((((class color) (min-colors 16777215)) (:foreground "#eed891" :bold t)) (((class color) (min-colors 255)) (:foreground "#eed891" :bold t)) (t (:foreground "#eed891" :bold t))))
 '(ivy-confirm-face ((((class color) (min-colors 16777215)) (:inherit success)) (((class color) (min-colors 255)) (:inherit success)) (t (:inherit success))))
 '(ivy-current-match ((t (:background "#1d1d2b" :foreground "#0ed49b" :weight bold))))
 '(ivy-cursor ((t (:background "#28283a" :foreground "#e6e6e8"))))
 '(ivy-grep-info ((((class color) (min-colors 16777215)) (:foreground "#4ca6e8")) (((class color) (min-colors 255)) (:foreground "#4ca6e8")) (t (:foreground "#4ca6e8"))))
 '(ivy-highlight-face ((((class color) (min-colors 16777215)) (:background nil :foreground "#6bd9db")) (((class color) (min-colors 255)) (:background nil :foreground "#6bd9db")) (t (:background nil :foreground "#6bd9db"))))
 '(ivy-match-required-face ((((class color) (min-colors 16777215)) (:background nil :foreground "#e84c58" :bold nil)) (((class color) (min-colors 255)) (:background nil :foreground "#e84c58" :bold nil)) (t (:background nil :foreground "#e84c58" :bold nil))))
 '(ivy-modified-buffer ((((class color) (min-colors 16777215)) (:foreground "#dbac66")) (((class color) (min-colors 255)) (:foreground "#dbac66")) (t (:foreground "#dbac66"))))
 '(ivy-remote ((((class color) (min-colors 16777215)) (:foreground "#9587DD")) (((class color) (min-colors 255)) (:foreground "#9587DD")) (t (:foreground "#9587DD"))))
 '(ivy-subdir ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :bold t)) (((class color) (min-colors 255)) (:foreground "#738FD7" :bold t)) (t (:foreground "#738FD7" :bold t))))
 '(ivy-virtual ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8")) (((class color) (min-colors 255)) (:foreground "#e6e6e8")) (t (:foreground "#e6e6e8"))))
 '(ivy-minibuffer-match-face-1 ((((class color) (min-colors 16777215)) (:background nil :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background nil :foreground "#e6e6e8")) (t (:background nil :foreground "#e6e6e8"))))
 '(ivy-minibuffer-match-face-2 ((((class color) (min-colors 16777215)) (:background nil :foreground "#ee7042" :bold t)) (((class color) (min-colors 255)) (:background nil :foreground "#ee7042" :bold t)) (t (:background nil :foreground "#ee7042" :bold t))))
 '(ivy-minibuffer-match-face-3 ((((class color) (min-colors 16777215)) (:background nil :foreground "#0D9C94" :bold t)) (((class color) (min-colors 255)) (:background nil :foreground "#0D9C94" :bold t)) (t (:background nil :foreground "#0D9C94" :bold t))))
 '(ivy-minibuffer-match-face-4 ((((class color) (min-colors 16777215)) (:background nil :foreground "#eae46a" :bold t)) (((class color) (min-colors 255)) (:background nil :foreground "#eae46a" :bold t)) (t (:background nil :foreground "#eae46a" :bold t))))
 '(ivy-posframe ((((class color) (min-colors 16777215)) (:background "#1d1d2b")) (((class color) (min-colors 255)) (:background "#2B2B2F")) (t (:background "#2B2B2F"))))
 '(ivy-posframe-border ((((class color) (min-colors 16777215)) (:background "#32324a")) (((class color) (min-colors 255)) (:background "#353b3c")) (t (:background "#353b3c"))))
 '(counsel-key-binding ((((class color) (min-colors 16777215)) (:foreground "#eed891")) (((class color) (min-colors 255)) (:foreground "#eed891")) (t (:foreground "#eed891"))))
 '(swiper-match-face-1 ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#e6e6e8")) (t (:background "#2B2B2F" :foreground "#e6e6e8"))))
 '(swiper-match-face-2 ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#ee7042" :bold t)) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#ee7042" :bold t)) (t (:background "#2B2B2F" :foreground "#ee7042" :bold t))))
 '(swiper-match-face-3 ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#0D9C94" :bold t)) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#0D9C94" :bold t)) (t (:background "#2B2B2F" :foreground "#0D9C94" :bold t))))
 '(swiper-match-face-4 ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#eae46a" :bold t)) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#eae46a" :bold t)) (t (:background "#2B2B2F" :foreground "#eae46a" :bold t))))
 '(swiper-background-match-face-1 ((((class color) (min-colors 16777215)) (:inherit swiper-match-face-1 :bold nil :background "#14141e")) (((class color) (min-colors 255)) (:inherit swiper-match-face-1 :bold nil :background "#222225")) (t (:inherit swiper-match-face-1 :bold nil :background "#222225"))))
 '(swiper-background-match-face-2 ((((class color) (min-colors 16777215)) (:inherit swiper-match-face-2 :bold nil :background "#14141e")) (((class color) (min-colors 255)) (:inherit swiper-match-face-2 :bold nil :background "#222225")) (t (:inherit swiper-match-face-2 :bold nil :background "#222225"))))
 '(swiper-background-match-face-3 ((((class color) (min-colors 16777215)) (:inherit swiper-match-face-3 :bold nil :background "#14141e")) (((class color) (min-colors 255)) (:inherit swiper-match-face-3 :bold nil :background "#222225")) (t (:inherit swiper-match-face-3 :bold nil :background "#222225"))))
 '(swiper-background-match-face-4 ((((class color) (min-colors 16777215)) (:inherit swiper-match-face-4 :bold nil :background "#14141e")) (((class color) (min-colors 255)) (:inherit swiper-match-face-4 :bold nil :background "#222225")) (t (:inherit swiper-match-face-4 :bold nil :background "#222225"))))
 '(swiper-line-face ((((class color) (min-colors 16777215)) (:inherit hl-line)) (((class color) (min-colors 255)) (:inherit hl-line)) (t (:inherit hl-line))))
 '(completions-common-part ((((class color) (min-colors 16777215)) (:foreground "#6bd9db")) (((class color) (min-colors 255)) (:foreground "#6bd9db")) (t (:foreground "#6bd9db"))))
 '(completions-annotations ((t (:foreground "royal blue"))))
 '(selectrum-current-candidate ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#0ed49b" :bold t)) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#0ed49b" :bold t)) (t (:background "#2B2B2F" :foreground "#0ed49b" :bold t))))
 '(selectrum-primary-highlight ((((class color) (min-colors 16777215)) (:foreground "#ee7042")) (((class color) (min-colors 255)) (:foreground "#ee7042")) (t (:foreground "#ee7042"))))
 '(selectrum-secondary-highlight ((((class color) (min-colors 16777215)) (:foreground "#0D9C94")) (((class color) (min-colors 255)) (:foreground "#0D9C94")) (t (:foreground "#0D9C94"))))
 '(tabbar-default ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#14141e" :height 1.0)) (((class color) (min-colors 255)) (:background "#222225" :foreground "#222225" :height 1.0)) (t (:background "#222225" :foreground "#222225" :height 1.0))))
 '(tabbar-highlight ((((class color) (min-colors 16777215)) (:background "#545c5e" :foreground "#e6e6e8" :distant-foreground "#14141e")) (((class color) (min-colors 255)) (:background "#545c5e" :foreground "#e6e6e8" :distant-foreground "#222225")) (t (:background "#545c5e" :foreground "#e6e6e8" :distant-foreground "#222225"))))
 '(tabbar-button ((((class color) (min-colors 16777215)) (:foreground "#e6e6e8" :background "#14141e")) (((class color) (min-colors 255)) (:foreground "#e6e6e8" :background "#222225")) (t (:foreground "#e6e6e8" :background "#222225"))))
 '(tabbar-button-highlight ((((class color) (min-colors 16777215)) (:foreground "#14141e" :background "#bebec4")) (((class color) (min-colors 255)) (:foreground "#222225" :background "#bebec4")) (t (:foreground "#222225" :background "#bebec4"))))
 '(tabbar-modified ((((class color) (min-colors 16777215)) (:inherit tabbar-default :foreground "#dbac66" :weight bold)) (((class color) (min-colors 255)) (:inherit tabbar-default :foreground "#dbac66" :weight bold)) (t (:inherit tabbar-default :foreground "#dbac66" :weight bold))))
 '(tabbar-unselected ((((class color) (min-colors 16777215)) (:inherit tabbar-default :foreground "#545c5e")) (((class color) (min-colors 255)) (:inherit tabbar-default :foreground "#545c5e")) (t (:inherit tabbar-default :foreground "#545c5e"))))
 '(tabbar-unselected-modified ((((class color) (min-colors 16777215)) (:inherit tabbar-modified)) (((class color) (min-colors 255)) (:inherit tabbar-modified)) (t (:inherit tabbar-modified))))
 '(tabbar-selected ((((class color) (min-colors 16777215)) (:inherit tabbar-default :foreground "#e6e6e8" :background "#1d1d2b" :weight bold)) (((class color) (min-colors 255)) (:inherit tabbar-default :foreground "#e6e6e8" :background "#2B2B2F" :weight bold)) (t (:inherit tabbar-default :foreground "#e6e6e8" :background "#2B2B2F" :weight bold))))
 '(tabbar-selected-modified ((((class color) (min-colors 16777215)) (:inherit tabbar-selected :foreground "#35BF88")) (((class color) (min-colors 255)) (:inherit tabbar-selected :foreground "#35BF88")) (t (:inherit tabbar-selected :foreground "#35BF88"))))
 '(tab-bar ((((class color) (min-colors 16777215)) (:background "#111119" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#18181B" :foreground "#e6e6e8")) (t (:background "#18181B" :foreground "#e6e6e8"))))
 '(tab-line ((((class color) (min-colors 16777215)) (:background "#111119" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#18181B" :foreground "#e6e6e8")) (t (:background "#18181B" :foreground "#e6e6e8"))))
 '(tab-bar-tab ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#e6e6e8")) (t (:background "#222225" :foreground "#e6e6e8"))))
 '(tab-bar-tab-inactive ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#545c5e")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#545c5e")) (t (:background "#222225" :foreground "#545c5e"))))
 '(awesome-tab-default ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#14141e")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#222225")) (t (:background "#222225" :foreground "#222225"))))
 '(awesome-tab-unselected ((((class color) (min-colors 16777215)) (:background "#1d1d2b" :foreground "#545c5e")) (((class color) (min-colors 255)) (:background "#2B2B2F" :foreground "#545c5e")) (t (:background "#2B2B2F" :foreground "#545c5e"))))
 '(awesome-tab-selected ((((class color) (min-colors 16777215)) (:background "#28283a" :foreground "#0ed49b")) (((class color) (min-colors 255)) (:background "#303035" :foreground "#0ed49b")) (t (:background "#303035" :foreground "#0ed49b"))))
 '(centaur-tabs-default ((((class color) (min-colors 16777215)) (:background "#111119" :foreground "#111119")) (((class color) (min-colors 255)) (:background "#18181B" :foreground "#18181B")) (t (:background "#18181B" :foreground "#18181B"))))
 '(centaur-tabs-selected ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#e6e6e8")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#e6e6e8")) (t (:background "#222225" :foreground "#e6e6e8"))))
 '(centaur-tabs-unselected ((((class color) (min-colors 16777215)) (:background "#111119" :foreground "#545c5e")) (((class color) (min-colors 255)) (:background "#18181B" :foreground "#545c5e")) (t (:background "#18181B" :foreground "#545c5e"))))
 '(centaur-tabs-selected-modified ((((class color) (min-colors 16777215)) (:background "#14141e" :foreground "#d24b83")) (((class color) (min-colors 255)) (:background "#222225" :foreground "#d24b83")) (t (:background "#222225" :foreground "#d24b83"))))
 '(centaur-tabs-unselected-modified ((((class color) (min-colors 16777215)) (:background "#111119" :foreground "#d24b83")) (((class color) (min-colors 255)) (:background "#18181B" :foreground "#d24b83")) (t (:background "#18181B" :foreground "#d24b83"))))
 '(centaur-tabs-active-bar-face ((((class color) (min-colors 16777215)) (:background "#738FD7")) (((class color) (min-colors 255)) (:background "#738FD7")) (t (:background "#738FD7"))))
 '(centaur-tabs-modified-marker-selected ((((class color) (min-colors 16777215)) (:inherit centaur-tabs-selected :foreground "#738FD7")) (((class color) (min-colors 255)) (:inherit centaur-tabs-selected :foreground "#738FD7")) (t (:inherit centaur-tabs-selected :foreground "#738FD7"))))
 '(centaur-tabs-modified-marker-unselected ((((class color) (min-colors 16777215)) (:foreground "#738FD7" :inherit centaur-tabs-unselected)) (((class color) (min-colors 255)) (:foreground "#738FD7" :inherit centaur-tabs-unselected)) (t (:foreground "#738FD7" :inherit centaur-tabs-unselected))))
 '(marginalia-documentation ((t (:inherit completions-annotations))))
 '(default ((t (:background "#14141e" :foreground "#e6e6e8")))))

(provide-theme 'Sholum)
